// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXBuildFile section */
		5631A737175804D800FBB5E2 /* Maze (alt) [David Winter, 199x].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A613175804D700FBB5E2 /* Maze (alt) [David Winter, 199x].ch8 */; };
		5631A738175804D800FBB5E2 /* Maze (alt) [David Winter, 199x].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A614175804D700FBB5E2 /* Maze (alt) [David Winter, 199x].txt */; };
		5631A739175804D800FBB5E2 /* Maze [David Winter, 199x].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A615175804D700FBB5E2 /* Maze [David Winter, 199x].ch8 */; };
		5631A73A175804D800FBB5E2 /* Maze [David Winter, 199x].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A616175804D700FBB5E2 /* Maze [David Winter, 199x].txt */; };
		5631A73B175804D800FBB5E2 /* Particle Demo [zeroZshadow, 2008].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A617175804D700FBB5E2 /* Particle Demo [zeroZshadow, 2008].ch8 */; };
		5631A73C175804D800FBB5E2 /* Particle Demo [zeroZshadow, 2008].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A618175804D700FBB5E2 /* Particle Demo [zeroZshadow, 2008].txt */; };
		5631A73D175804D800FBB5E2 /* Sierpinski [Sergey Naydenov, 2010].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A619175804D700FBB5E2 /* Sierpinski [Sergey Naydenov, 2010].ch8 */; };
		5631A73E175804D800FBB5E2 /* Sirpinski [Sergey Naydenov, 2010].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A61A175804D700FBB5E2 /* Sirpinski [Sergey Naydenov, 2010].ch8 */; };
		5631A73F175804D800FBB5E2 /* Stars [Sergey Naydenov, 2010].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A61B175804D700FBB5E2 /* Stars [Sergey Naydenov, 2010].ch8 */; };
		5631A740175804D800FBB5E2 /* Trip8 Demo (2008) [Revival Studios].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A61C175804D700FBB5E2 /* Trip8 Demo (2008) [Revival Studios].ch8 */; };
		5631A741175804D800FBB5E2 /* Trip8 Demo (2008) [Revival Studios].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A61D175804D700FBB5E2 /* Trip8 Demo (2008) [Revival Studios].txt */; };
		5631A742175804D800FBB5E2 /* Zero Demo [zeroZshadow, 2007].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A61E175804D700FBB5E2 /* Zero Demo [zeroZshadow, 2007].ch8 */; };
		5631A743175804D800FBB5E2 /* Zero Demo [zeroZshadow, 2007].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A61F175804D700FBB5E2 /* Zero Demo [zeroZshadow, 2007].txt */; };
		5631A744175804D800FBB5E2 /* 15 Puzzle [Roger Ivie] (alt).ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A621175804D700FBB5E2 /* 15 Puzzle [Roger Ivie] (alt).ch8 */; };
		5631A745175804D800FBB5E2 /* 15 Puzzle [Roger Ivie].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A622175804D700FBB5E2 /* 15 Puzzle [Roger Ivie].ch8 */; };
		5631A746175804D800FBB5E2 /* 15 Puzzle [Roger Ivie].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A623175804D700FBB5E2 /* 15 Puzzle [Roger Ivie].txt */; };
		5631A747175804D800FBB5E2 /* Addition Problems [Paul C. Moews].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A624175804D700FBB5E2 /* Addition Problems [Paul C. Moews].ch8 */; };
		5631A748175804D800FBB5E2 /* Airplane.ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A625175804D700FBB5E2 /* Airplane.ch8 */; };
		5631A749175804D800FBB5E2 /* Animal Race [Brian Astle].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A626175804D700FBB5E2 /* Animal Race [Brian Astle].ch8 */; };
		5631A74A175804D800FBB5E2 /* Animal Race [Brian Astle].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A627175804D700FBB5E2 /* Animal Race [Brian Astle].txt */; };
		5631A74B175804D800FBB5E2 /* Astro Dodge [Revival Studios, 2008].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A628175804D700FBB5E2 /* Astro Dodge [Revival Studios, 2008].ch8 */; };
		5631A74C175804D800FBB5E2 /* Astro Dodge [Revival Studios, 2008].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A629175804D700FBB5E2 /* Astro Dodge [Revival Studios, 2008].txt */; };
		5631A74D175804D800FBB5E2 /* Biorhythm [Jef Winsor].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A62A175804D700FBB5E2 /* Biorhythm [Jef Winsor].ch8 */; };
		5631A74E175804D800FBB5E2 /* Biorhythm [Jef Winsor].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A62B175804D700FBB5E2 /* Biorhythm [Jef Winsor].txt */; };
		5631A74F175804D800FBB5E2 /* Blinky [Hans Christian Egeberg, 1991].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A62C175804D700FBB5E2 /* Blinky [Hans Christian Egeberg, 1991].ch8 */; };
		5631A750175804D800FBB5E2 /* Blinky [Hans Christian Egeberg] (alt).ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A62D175804D700FBB5E2 /* Blinky [Hans Christian Egeberg] (alt).ch8 */; };
		5631A751175804D800FBB5E2 /* Blitz [David Winter].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A62E175804D700FBB5E2 /* Blitz [David Winter].ch8 */; };
		5631A752175804D800FBB5E2 /* Blitz [David Winter].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A62F175804D700FBB5E2 /* Blitz [David Winter].txt */; };
		5631A753175804D800FBB5E2 /* Bowling [Gooitzen van der Wal].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A630175804D700FBB5E2 /* Bowling [Gooitzen van der Wal].ch8 */; };
		5631A754175804D800FBB5E2 /* Bowling [Gooitzen van der Wal].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A631175804D700FBB5E2 /* Bowling [Gooitzen van der Wal].txt */; };
		5631A755175804D800FBB5E2 /* Breakout (Brix hack) [David Winter, 1997].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A632175804D700FBB5E2 /* Breakout (Brix hack) [David Winter, 1997].ch8 */; };
		5631A756175804D800FBB5E2 /* Breakout (Brix hack) [David Winter, 1997].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A633175804D700FBB5E2 /* Breakout (Brix hack) [David Winter, 1997].txt */; };
		5631A757175804D800FBB5E2 /* Breakout [Carmelo Cortez, 1979].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A634175804D700FBB5E2 /* Breakout [Carmelo Cortez, 1979].ch8 */; };
		5631A758175804D800FBB5E2 /* Breakout [Carmelo Cortez, 1979].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A635175804D700FBB5E2 /* Breakout [Carmelo Cortez, 1979].txt */; };
		5631A759175804D800FBB5E2 /* Brick (Brix hack, 1990).ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A636175804D700FBB5E2 /* Brick (Brix hack, 1990).ch8 */; };
		5631A75A175804D800FBB5E2 /* Brick (Brix hack, 1990).txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A637175804D700FBB5E2 /* Brick (Brix hack, 1990).txt */; };
		5631A75B175804D800FBB5E2 /* Brix [Andreas Gustafsson, 1990].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A638175804D700FBB5E2 /* Brix [Andreas Gustafsson, 1990].ch8 */; };
		5631A75C175804D800FBB5E2 /* Cave.ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A639175804D700FBB5E2 /* Cave.ch8 */; };
		5631A75D175804D800FBB5E2 /* Coin Flipping [Carmelo Cortez, 1978].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A63A175804D700FBB5E2 /* Coin Flipping [Carmelo Cortez, 1978].ch8 */; };
		5631A75E175804D800FBB5E2 /* Coin Flipping [Carmelo Cortez, 1978].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A63B175804D700FBB5E2 /* Coin Flipping [Carmelo Cortez, 1978].txt */; };
		5631A75F175804D800FBB5E2 /* Connect 4 [David Winter].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A63C175804D700FBB5E2 /* Connect 4 [David Winter].ch8 */; };
		5631A760175804D800FBB5E2 /* Connect 4 [David Winter].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A63D175804D700FBB5E2 /* Connect 4 [David Winter].txt */; };
		5631A761175804D800FBB5E2 /* Craps [Camerlo Cortez, 1978].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A63E175804D700FBB5E2 /* Craps [Camerlo Cortez, 1978].ch8 */; };
		5631A762175804D800FBB5E2 /* Craps [Camerlo Cortez, 1978].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A63F175804D700FBB5E2 /* Craps [Camerlo Cortez, 1978].txt */; };
		5631A763175804D800FBB5E2 /* Deflection [John Fort].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A640175804D700FBB5E2 /* Deflection [John Fort].ch8 */; };
		5631A764175804D800FBB5E2 /* Deflection [John Fort].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A641175804D700FBB5E2 /* Deflection [John Fort].txt */; };
		5631A765175804D800FBB5E2 /* Figures.ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A642175804D700FBB5E2 /* Figures.ch8 */; };
		5631A766175804D800FBB5E2 /* Filter.ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A643175804D700FBB5E2 /* Filter.ch8 */; };
		5631A767175804D800FBB5E2 /* Guess [David Winter] (alt).ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A644175804D700FBB5E2 /* Guess [David Winter] (alt).ch8 */; };
		5631A768175804D800FBB5E2 /* Guess [David Winter] (alt).txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A645175804D700FBB5E2 /* Guess [David Winter] (alt).txt */; };
		5631A769175804D800FBB5E2 /* Guess [David Winter].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A646175804D700FBB5E2 /* Guess [David Winter].ch8 */; };
		5631A76A175804D800FBB5E2 /* Guess [David Winter].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A647175804D700FBB5E2 /* Guess [David Winter].txt */; };
		5631A76B175804D800FBB5E2 /* Hi-Lo [Jef Winsor, 1978].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A648175804D700FBB5E2 /* Hi-Lo [Jef Winsor, 1978].ch8 */; };
		5631A76C175804D800FBB5E2 /* Hi-Lo [Jef Winsor, 1978].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A649175804D700FBB5E2 /* Hi-Lo [Jef Winsor, 1978].txt */; };
		5631A76D175804D800FBB5E2 /* Hidden [David Winter, 1996].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A64A175804D700FBB5E2 /* Hidden [David Winter, 1996].ch8 */; };
		5631A76E175804D800FBB5E2 /* Hidden [David Winter, 1996].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A64B175804D700FBB5E2 /* Hidden [David Winter, 1996].txt */; };
		5631A76F175804D800FBB5E2 /* Kaleidoscope [Joseph Weisbecker, 1978].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A64C175804D700FBB5E2 /* Kaleidoscope [Joseph Weisbecker, 1978].ch8 */; };
		5631A770175804D800FBB5E2 /* Kaleidoscope [Joseph Weisbecker, 1978].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A64D175804D700FBB5E2 /* Kaleidoscope [Joseph Weisbecker, 1978].txt */; };
		5631A771175804D800FBB5E2 /* Landing.ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A64E175804D700FBB5E2 /* Landing.ch8 */; };
		5631A772175804D800FBB5E2 /* Lunar Lander (Udo Pernisz, 1979).ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A64F175804D700FBB5E2 /* Lunar Lander (Udo Pernisz, 1979).ch8 */; };
		5631A773175804D800FBB5E2 /* Lunar Lander [Udo Pernisz, 1979].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A650175804D700FBB5E2 /* Lunar Lander [Udo Pernisz, 1979].txt */; };
		5631A774175804D800FBB5E2 /* Mastermind FourRow (Robert Lindley, 1978).ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A651175804D700FBB5E2 /* Mastermind FourRow (Robert Lindley, 1978).ch8 */; };
		5631A775175804D800FBB5E2 /* Mastermind FourRow (Robert Lindley, 1978).txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A652175804D700FBB5E2 /* Mastermind FourRow (Robert Lindley, 1978).txt */; };
		5631A776175804D800FBB5E2 /* Merlin [David Winter].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A653175804D700FBB5E2 /* Merlin [David Winter].ch8 */; };
		5631A777175804D800FBB5E2 /* Merlin [David Winter].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A654175804D700FBB5E2 /* Merlin [David Winter].txt */; };
		5631A778175804D800FBB5E2 /* Missile [David Winter].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A655175804D700FBB5E2 /* Missile [David Winter].ch8 */; };
		5631A779175804D800FBB5E2 /* Most Dangerous Game [Peter Maruhnic].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A656175804D700FBB5E2 /* Most Dangerous Game [Peter Maruhnic].ch8 */; };
		5631A77A175804D800FBB5E2 /* Most Dangerous Game [Peter Maruhnic].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A657175804D700FBB5E2 /* Most Dangerous Game [Peter Maruhnic].txt */; };
		5631A77B175804D800FBB5E2 /* Nim [Carmelo Cortez, 1978].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A658175804D700FBB5E2 /* Nim [Carmelo Cortez, 1978].ch8 */; };
		5631A77C175804D800FBB5E2 /* Nim [Carmelo Cortez, 1978].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A659175804D700FBB5E2 /* Nim [Carmelo Cortez, 1978].txt */; };
		5631A77D175804D800FBB5E2 /* Paddles.ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A65A175804D700FBB5E2 /* Paddles.ch8 */; };
		5631A77E175804D800FBB5E2 /* Pong (1 player).ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A65B175804D700FBB5E2 /* Pong (1 player).ch8 */; };
		5631A77F175804D800FBB5E2 /* Pong (alt).ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A65C175804D700FBB5E2 /* Pong (alt).ch8 */; };
		5631A780175804D800FBB5E2 /* Pong 2 (Pong hack) [David Winter, 1997].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A65D175804D700FBB5E2 /* Pong 2 (Pong hack) [David Winter, 1997].ch8 */; };
		5631A781175804D800FBB5E2 /* Pong [Paul Vervalin, 1990].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A65E175804D700FBB5E2 /* Pong [Paul Vervalin, 1990].ch8 */; };
		5631A782175804D800FBB5E2 /* Pong [Paul Vervalin, 1990].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A65F175804D700FBB5E2 /* Pong [Paul Vervalin, 1990].txt */; };
		5631A783175804D800FBB5E2 /* Programmable Spacefighters [Jef Winsor].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A660175804D700FBB5E2 /* Programmable Spacefighters [Jef Winsor].ch8 */; };
		5631A784175804D800FBB5E2 /* Programmable Spacefighters [Jef Winsor].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A661175804D700FBB5E2 /* Programmable Spacefighters [Jef Winsor].txt */; };
		5631A785175804D800FBB5E2 /* Puzzle.ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A662175804D700FBB5E2 /* Puzzle.ch8 */; };
		5631A786175804D800FBB5E2 /* Reversi [Philip Baltzer].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A663175804D700FBB5E2 /* Reversi [Philip Baltzer].ch8 */; };
		5631A787175804D800FBB5E2 /* Reversi [Philip Baltzer].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A664175804D700FBB5E2 /* Reversi [Philip Baltzer].txt */; };
		5631A788175804D800FBB5E2 /* Rocket [Joseph Weisbecker, 1978].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A665175804D700FBB5E2 /* Rocket [Joseph Weisbecker, 1978].ch8 */; };
		5631A789175804D800FBB5E2 /* Rocket Launch [Jonas Lindstedt].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A666175804D700FBB5E2 /* Rocket Launch [Jonas Lindstedt].ch8 */; };
		5631A78A175804D800FBB5E2 /* Rocket Launcher.ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A667175804D700FBB5E2 /* Rocket Launcher.ch8 */; };
		5631A78B175804D800FBB5E2 /* Rush Hour [Hap, 2006] (alt).ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A668175804D700FBB5E2 /* Rush Hour [Hap, 2006] (alt).ch8 */; };
		5631A78C175804D800FBB5E2 /* Rush Hour [Hap, 2006].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A669175804D700FBB5E2 /* Rush Hour [Hap, 2006].ch8 */; };
		5631A78D175804D800FBB5E2 /* Rush Hour [Hap, 2006].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A66A175804D700FBB5E2 /* Rush Hour [Hap, 2006].txt */; };
		5631A78E175804D800FBB5E2 /* Russian Roulette [Carmelo Cortez, 1978].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A66B175804D700FBB5E2 /* Russian Roulette [Carmelo Cortez, 1978].ch8 */; };
		5631A78F175804D800FBB5E2 /* Russian Roulette [Carmelo Cortez, 1978].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A66C175804D700FBB5E2 /* Russian Roulette [Carmelo Cortez, 1978].txt */; };
		5631A790175804D800FBB5E2 /* Sequence Shoot [Joyce Weisbecker].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A66D175804D700FBB5E2 /* Sequence Shoot [Joyce Weisbecker].ch8 */; };
		5631A791175804D800FBB5E2 /* Sequence Shoot [Joyce Weisbecker].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A66E175804D700FBB5E2 /* Sequence Shoot [Joyce Weisbecker].txt */; };
		5631A792175804D800FBB5E2 /* Shooting Stars [Philip Baltzer, 1978].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A66F175804D700FBB5E2 /* Shooting Stars [Philip Baltzer, 1978].ch8 */; };
		5631A793175804D800FBB5E2 /* Shooting Stars [Philip Baltzer, 1978].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A670175804D700FBB5E2 /* Shooting Stars [Philip Baltzer, 1978].txt */; };
		5631A794175804D800FBB5E2 /* Slide [Joyce Weisbecker].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A671175804D700FBB5E2 /* Slide [Joyce Weisbecker].ch8 */; };
		5631A795175804D800FBB5E2 /* Slide [Joyce Weisbecker].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A672175804D700FBB5E2 /* Slide [Joyce Weisbecker].txt */; };
		5631A796175804D800FBB5E2 /* Soccer.ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A673175804D700FBB5E2 /* Soccer.ch8 */; };
		5631A797175804D800FBB5E2 /* Space Flight.ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A674175804D700FBB5E2 /* Space Flight.ch8 */; };
		5631A798175804D800FBB5E2 /* Space Intercept [Joseph Weisbecker, 1978].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A675175804D700FBB5E2 /* Space Intercept [Joseph Weisbecker, 1978].ch8 */; };
		5631A799175804D800FBB5E2 /* Space Intercept [Joseph Weisbecker, 1978].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A676175804D700FBB5E2 /* Space Intercept [Joseph Weisbecker, 1978].txt */; };
		5631A79A175804D800FBB5E2 /* Space Invaders [David Winter] (alt).ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A677175804D700FBB5E2 /* Space Invaders [David Winter] (alt).ch8 */; };
		5631A79B175804D800FBB5E2 /* Space Invaders [David Winter] (alt).txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A678175804D700FBB5E2 /* Space Invaders [David Winter] (alt).txt */; };
		5631A79C175804D800FBB5E2 /* Space Invaders [David Winter].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A679175804D700FBB5E2 /* Space Invaders [David Winter].ch8 */; };
		5631A79D175804D800FBB5E2 /* Space Invaders [David Winter].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A67A175804D700FBB5E2 /* Space Invaders [David Winter].txt */; };
		5631A79E175804D800FBB5E2 /* Spooky Spot [Joseph Weisbecker, 1978].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A67B175804D700FBB5E2 /* Spooky Spot [Joseph Weisbecker, 1978].ch8 */; };
		5631A79F175804D800FBB5E2 /* Spooky Spot [Joseph Weisbecker, 1978].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A67C175804D700FBB5E2 /* Spooky Spot [Joseph Weisbecker, 1978].txt */; };
		5631A7A0175804D800FBB5E2 /* Squash [David Winter].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A67D175804D700FBB5E2 /* Squash [David Winter].ch8 */; };
		5631A7A1175804D800FBB5E2 /* Submarine [Carmelo Cortez, 1978].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A67E175804D700FBB5E2 /* Submarine [Carmelo Cortez, 1978].ch8 */; };
		5631A7A2175804D800FBB5E2 /* Submarine [Carmelo Cortez, 1978].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A67F175804D700FBB5E2 /* Submarine [Carmelo Cortez, 1978].txt */; };
		5631A7A3175804D800FBB5E2 /* Sum Fun [Joyce Weisbecker].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A680175804D700FBB5E2 /* Sum Fun [Joyce Weisbecker].ch8 */; };
		5631A7A4175804D800FBB5E2 /* Sum Fun [Joyce Weisbecker].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A681175804D700FBB5E2 /* Sum Fun [Joyce Weisbecker].txt */; };
		5631A7A5175804D800FBB5E2 /* Syzygy [Roy Trevino, 1990].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A682175804D700FBB5E2 /* Syzygy [Roy Trevino, 1990].ch8 */; };
		5631A7A6175804D800FBB5E2 /* Syzygy [Roy Trevino, 1990].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A683175804D700FBB5E2 /* Syzygy [Roy Trevino, 1990].txt */; };
		5631A7A7175804D800FBB5E2 /* Tank.ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A684175804D700FBB5E2 /* Tank.ch8 */; };
		5631A7A8175804D800FBB5E2 /* Tank.txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A685175804D700FBB5E2 /* Tank.txt */; };
		5631A7A9175804D800FBB5E2 /* Tapeworm [JDR, 1999].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A686175804D700FBB5E2 /* Tapeworm [JDR, 1999].ch8 */; };
		5631A7AA175804D800FBB5E2 /* Tetris [Fran Dachille, 1991].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A687175804D700FBB5E2 /* Tetris [Fran Dachille, 1991].ch8 */; };
		5631A7AB175804D800FBB5E2 /* Tetris [Fran Dachille, 1991].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A688175804D700FBB5E2 /* Tetris [Fran Dachille, 1991].txt */; };
		5631A7AC175804D800FBB5E2 /* Tic-Tac-Toe [David Winter].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A689175804D700FBB5E2 /* Tic-Tac-Toe [David Winter].ch8 */; };
		5631A7AD175804D800FBB5E2 /* Timebomb.ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A68A175804D700FBB5E2 /* Timebomb.ch8 */; };
		5631A7AE175804D800FBB5E2 /* Tron.ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A68B175804D700FBB5E2 /* Tron.ch8 */; };
		5631A7AF175804D800FBB5E2 /* UFO [Lutz V, 1992].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A68C175804D700FBB5E2 /* UFO [Lutz V, 1992].ch8 */; };
		5631A7B0175804D800FBB5E2 /* UFO [Lutz V, 1992].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A68D175804D700FBB5E2 /* UFO [Lutz V, 1992].txt */; };
		5631A7B1175804D800FBB5E2 /* Vers [JMN, 1991].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A68E175804D700FBB5E2 /* Vers [JMN, 1991].ch8 */; };
		5631A7B2175804D800FBB5E2 /* Vertical Brix [Paul Robson, 1996].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A68F175804D700FBB5E2 /* Vertical Brix [Paul Robson, 1996].ch8 */; };
		5631A7B3175804D800FBB5E2 /* Wall [David Winter].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A690175804D700FBB5E2 /* Wall [David Winter].ch8 */; };
		5631A7B4175804D800FBB5E2 /* Wipe Off [Joseph Weisbecker].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A691175804D700FBB5E2 /* Wipe Off [Joseph Weisbecker].ch8 */; };
		5631A7B5175804D800FBB5E2 /* Worm V4 [RB-Revival Studios, 2007].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A692175804D700FBB5E2 /* Worm V4 [RB-Revival Studios, 2007].ch8 */; };
		5631A7B6175804D800FBB5E2 /* Worm V4 [RB-Revival Studios, 2007].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A693175804D700FBB5E2 /* Worm V4 [RB-Revival Studios, 2007].txt */; };
		5631A7B7175804D800FBB5E2 /* X-Mirror.ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A694175804D700FBB5E2 /* X-Mirror.ch8 */; };
		5631A7B8175804D800FBB5E2 /* ZeroPong [zeroZshadow, 2007].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A695175804D700FBB5E2 /* ZeroPong [zeroZshadow, 2007].ch8 */; };
		5631A7B9175804D800FBB5E2 /* !hires_information.txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A697175804D700FBB5E2 /* !hires_information.txt */; };
		5631A7BA175804D800FBB5E2 /* Astro Dodge Hires [Revival Studios, 2008].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A698175804D700FBB5E2 /* Astro Dodge Hires [Revival Studios, 2008].ch8 */; };
		5631A7BB175804D800FBB5E2 /* Astro Dodge Hires [Revival Studios, 2008].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A699175804D700FBB5E2 /* Astro Dodge Hires [Revival Studios, 2008].txt */; };
		5631A7BC175804D800FBB5E2 /* Hires Maze [David Winter, 199x].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A69A175804D700FBB5E2 /* Hires Maze [David Winter, 199x].ch8 */; };
		5631A7BD175804D800FBB5E2 /* Hires Maze [David Winter, 199x].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A69B175804D700FBB5E2 /* Hires Maze [David Winter, 199x].txt */; };
		5631A7BE175804D800FBB5E2 /* Hires Particle Demo [zeroZshadow, 2008].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A69C175804D700FBB5E2 /* Hires Particle Demo [zeroZshadow, 2008].ch8 */; };
		5631A7BF175804D800FBB5E2 /* Hires Particle Demo [zeroZshadow, 2008].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A69D175804D700FBB5E2 /* Hires Particle Demo [zeroZshadow, 2008].txt */; };
		5631A7C0175804D800FBB5E2 /* Hires Sierpinski [Sergey Naydenov, 2010].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A69E175804D700FBB5E2 /* Hires Sierpinski [Sergey Naydenov, 2010].ch8 */; };
		5631A7C1175804D800FBB5E2 /* Hires Stars [Sergey Naydenov, 2010].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A69F175804D700FBB5E2 /* Hires Stars [Sergey Naydenov, 2010].ch8 */; };
		5631A7C2175804D800FBB5E2 /* Hires Test [Tom Swan, 1979].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6A0175804D700FBB5E2 /* Hires Test [Tom Swan, 1979].ch8 */; };
		5631A7C3175804D800FBB5E2 /* Hires Worm V4 [RB-Revival Studios, 2007].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6A1175804D700FBB5E2 /* Hires Worm V4 [RB-Revival Studios, 2007].ch8 */; };
		5631A7C4175804D800FBB5E2 /* Hires Worm V4 [RB-Revival Studios, 2007].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6A2175804D700FBB5E2 /* Hires Worm V4 [RB-Revival Studios, 2007].txt */; };
		5631A7C5175804D800FBB5E2 /* Trip8 Hires Demo (2008) [Revival Studios].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6A3175804D700FBB5E2 /* Trip8 Hires Demo (2008) [Revival Studios].ch8 */; };
		5631A7C6175804D800FBB5E2 /* Trip8 Hires Demo (2008) [Revival Studios].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6A4175804D700FBB5E2 /* Trip8 Hires Demo (2008) [Revival Studios].txt */; };
		5631A7C7175804D800FBB5E2 /* BMP Viewer - Hello (C8 example) [Hap, 2005].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6A6175804D700FBB5E2 /* BMP Viewer - Hello (C8 example) [Hap, 2005].ch8 */; };
		5631A7C8175804D800FBB5E2 /* BMP Viewer - Hello (C8 example) [Hap, 2005].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6A7175804D700FBB5E2 /* BMP Viewer - Hello (C8 example) [Hap, 2005].txt */; };
		5631A7C9175804D800FBB5E2 /* Chip8 emulator Logo [Garstyciuks].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6A8175804D700FBB5E2 /* Chip8 emulator Logo [Garstyciuks].ch8 */; };
		5631A7CA175804D800FBB5E2 /* Chip8 Picture.ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6A9175804D700FBB5E2 /* Chip8 Picture.ch8 */; };
		5631A7CB175804D800FBB5E2 /* Clock Program [Bill Fisher, 1981].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6AA175804D700FBB5E2 /* Clock Program [Bill Fisher, 1981].ch8 */; };
		5631A7CC175804D800FBB5E2 /* Clock Program [Bill Fisher, 1981].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6AB175804D700FBB5E2 /* Clock Program [Bill Fisher, 1981].txt */; };
		5631A7CD175804D800FBB5E2 /* Delay Timer Test [Matthew Mikolay, 2010].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6AC175804D700FBB5E2 /* Delay Timer Test [Matthew Mikolay, 2010].ch8 */; };
		5631A7CE175804D800FBB5E2 /* Delay Timer Test [Matthew Mikolay, 2010].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6AD175804D700FBB5E2 /* Delay Timer Test [Matthew Mikolay, 2010].txt */; };
		5631A7CF175804D800FBB5E2 /* Division Test [Sergey Naydenov, 2010].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6AE175804D700FBB5E2 /* Division Test [Sergey Naydenov, 2010].ch8 */; };
		5631A7D0175804D800FBB5E2 /* Fishie [Hap, 2005].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6AF175804D700FBB5E2 /* Fishie [Hap, 2005].ch8 */; };
		5631A7D1175804D800FBB5E2 /* Fishie [Hap, 2005].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6B0175804D700FBB5E2 /* Fishie [Hap, 2005].txt */; };
		5631A7D2175804D800FBB5E2 /* Framed MK1 [GV Samways, 1980].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6B1175804D700FBB5E2 /* Framed MK1 [GV Samways, 1980].ch8 */; };
		5631A7D3175804D800FBB5E2 /* Framed MK1 [GV Samways, 1980].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6B2175804D700FBB5E2 /* Framed MK1 [GV Samways, 1980].txt */; };
		5631A7D4175804D800FBB5E2 /* Framed MK2 [GV Samways, 1980].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6B3175804D700FBB5E2 /* Framed MK2 [GV Samways, 1980].ch8 */; };
		5631A7D5175804D800FBB5E2 /* Framed MK2 [GV Samways, 1980].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6B4175804D700FBB5E2 /* Framed MK2 [GV Samways, 1980].txt */; };
		5631A7D6175804D800FBB5E2 /* IBM Logo.ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6B5175804D700FBB5E2 /* IBM Logo.ch8 */; };
		5631A7D7175804D800FBB5E2 /* Jumping X and O [Harry Kleinberg, 1977].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6B6175804D700FBB5E2 /* Jumping X and O [Harry Kleinberg, 1977].ch8 */; };
		5631A7D8175804D800FBB5E2 /* Jumping X and O [Harry Kleinberg, 1977].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6B7175804D700FBB5E2 /* Jumping X and O [Harry Kleinberg, 1977].txt */; };
		5631A7D9175804D800FBB5E2 /* Keypad Test [Hap, 2006].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6B8175804D700FBB5E2 /* Keypad Test [Hap, 2006].ch8 */; };
		5631A7DA175804D800FBB5E2 /* Keypad Test [Hap, 2006].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6B9175804D700FBB5E2 /* Keypad Test [Hap, 2006].txt */; };
		5631A7DB175804D800FBB5E2 /* Life [GV Samways, 1980].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6BA175804D700FBB5E2 /* Life [GV Samways, 1980].ch8 */; };
		5631A7DC175804D800FBB5E2 /* Life [GV Samways, 1980].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6BB175804D800FBB5E2 /* Life [GV Samways, 1980].txt */; };
		5631A7DD175804D800FBB5E2 /* Minimal game [Revival Studios, 2007].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6BC175804D800FBB5E2 /* Minimal game [Revival Studios, 2007].ch8 */; };
		5631A7DE175804D800FBB5E2 /* Random Number Test [Matthew Mikolay, 2010].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6BD175804D800FBB5E2 /* Random Number Test [Matthew Mikolay, 2010].ch8 */; };
		5631A7DF175804D800FBB5E2 /* Random Number Test [Matthew Mikolay, 2010].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6BE175804D800FBB5E2 /* Random Number Test [Matthew Mikolay, 2010].txt */; };
		5631A7E0175804D800FBB5E2 /* SQRT Test [Sergey Naydenov, 2010].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6BF175804D800FBB5E2 /* SQRT Test [Sergey Naydenov, 2010].ch8 */; };
		5631A7E1175804D800FBB5E2 /* Blockout [Steve Houk].c8x in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6C1175804D800FBB5E2 /* Blockout [Steve Houk].c8x */; };
		5631A7E2175804D800FBB5E2 /* Blockout [Steve Houk].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6C2175804D800FBB5E2 /* Blockout [Steve Houk].txt */; };
		5631A7E3175804D800FBB5E2 /* Color Kaleidoscope [Steve Houk, 1978].c8x in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6C3175804D800FBB5E2 /* Color Kaleidoscope [Steve Houk, 1978].c8x */; };
		5631A7E4175804D800FBB5E2 /* Color Kaleidoscope [Steve Houk, 1978].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6C4175804D800FBB5E2 /* Color Kaleidoscope [Steve Houk, 1978].txt */; };
		5631A7E5175804D800FBB5E2 /* ColourTest.c8x in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6C5175804D800FBB5E2 /* ColourTest.c8x */; };
		5631A7E6175804D800FBB5E2 /* Maze 2 (ETI660 Hybrid).ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6C7175804D800FBB5E2 /* Maze 2 (ETI660 Hybrid).ch8 */; };
		5631A7E7175804D800FBB5E2 /* Music Maker (ETI660 Hybrid) [Peter Collins, 198x].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6C8175804D800FBB5E2 /* Music Maker (ETI660 Hybrid) [Peter Collins, 198x].ch8 */; };
		5631A7E8175804D800FBB5E2 /* Music Maker (ETI660 Hybrid) [Peter Collins, 198x].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6C9175804D800FBB5E2 /* Music Maker (ETI660 Hybrid) [Peter Collins, 198x].txt */; };
		5631A7E9175804D800FBB5E2 /* Pong (ETI660 Hybrid).ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6CA175804D800FBB5E2 /* Pong (ETI660 Hybrid).ch8 */; };
		5631A7EA175804D800FBB5E2 /* Space Invaders (ETI660 Hybrid) [P. Easdown,198x].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6CB175804D800FBB5E2 /* Space Invaders (ETI660 Hybrid) [P. Easdown,198x].ch8 */; };
		5631A7EB175804D800FBB5E2 /* Space Invaders (ETI660 Hybrid) [P. Easdown,198x].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6CC175804D800FBB5E2 /* Space Invaders (ETI660 Hybrid) [P. Easdown,198x].txt */; };
		5631A7EC175804D800FBB5E2 /* Wipeout (ETI660 hybrid) [W.F. Kreykes, 1982].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6CD175804D800FBB5E2 /* Wipeout (ETI660 hybrid) [W.F. Kreykes, 1982].ch8 */; };
		5631A7ED175804D800FBB5E2 /* Wipeout (ETI660 hybrid) [W.F. Kreykes, 1982].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6CE175804D800FBB5E2 /* Wipeout (ETI660 hybrid) [W.F. Kreykes, 1982].txt */; };
		5631A7EE175804D800FBB5E2 /* Bingo [Andrew Modla] (hybrid).ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6D0175804D800FBB5E2 /* Bingo [Andrew Modla] (hybrid).ch8 */; };
		5631A7EF175804D800FBB5E2 /* Bingo [Andrew Modla] (hybrid).txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6D1175804D800FBB5E2 /* Bingo [Andrew Modla] (hybrid).txt */; };
		5631A7F0175804D800FBB5E2 /* Blackjack [Andrew Modla] (hybrid).ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6D2175804D800FBB5E2 /* Blackjack [Andrew Modla] (hybrid).ch8 */; };
		5631A7F1175804D800FBB5E2 /* Blackjack [Andrew Modla] (hybrid).txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6D3175804D800FBB5E2 /* Blackjack [Andrew Modla] (hybrid).txt */; };
		5631A7F2175804D800FBB5E2 /* Boot-128 (hybrid).ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6D4175804D800FBB5E2 /* Boot-128 (hybrid).ch8 */; };
		5631A7F3175804D800FBB5E2 /* Message Center [Andrew Modla] (hybrid).ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6D5175804D800FBB5E2 /* Message Center [Andrew Modla] (hybrid).ch8 */; };
		5631A7F4175804D800FBB5E2 /* Message Center [Andrew Modla] (hybrid).txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6D6175804D800FBB5E2 /* Message Center [Andrew Modla] (hybrid).txt */; };
		5631A7F5175804D800FBB5E2 /* Video Display Drawing Game [Joseph Weisbecker] (hybrid).ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6D7175804D800FBB5E2 /* Video Display Drawing Game [Joseph Weisbecker] (hybrid).ch8 */; };
		5631A7F6175804D800FBB5E2 /* Video Display Drawing Game [Joseph Weisbecker] (hybrid).txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6D8175804D800FBB5E2 /* Video Display Drawing Game [Joseph Weisbecker] (hybrid).txt */; };
		5631A7F7175804D800FBB5E2 /* Pinball [Andrew Modla].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6D9175804D800FBB5E2 /* Pinball [Andrew Modla].ch8 */; };
		5631A7F8175804D800FBB5E2 /* Pinball [Andrew Modla].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6DA175804D800FBB5E2 /* Pinball [Andrew Modla].txt */; };
		5631A7F9175804D800FBB5E2 /* SoundTest.c8x in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6DB175804D800FBB5E2 /* SoundTest.c8x */; };
		5631A7FA175804D800FBB5E2 /* Chip8 Pack - Readme.txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6DC175804D800FBB5E2 /* Chip8 Pack - Readme.txt */; };
		5631A7FB175804D800FBB5E2 /* Latest Updates.txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6DD175804D800FBB5E2 /* Latest Updates.txt */; };
		5631A7FC175804D800FBB5E2 /* Mega Minimal [Revival Studios, 2007].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6DF175804D800FBB5E2 /* Mega Minimal [Revival Studios, 2007].ch8 */; };
		5631A7FD175804D800FBB5E2 /* Mega Particle Demo [zeroZshadow, 2008].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6E0175804D800FBB5E2 /* Mega Particle Demo [zeroZshadow, 2008].ch8 */; };
		5631A7FE175804D800FBB5E2 /* Mega Particle Demo [zeroZshadow, 2008].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6E1175804D800FBB5E2 /* Mega Particle Demo [zeroZshadow, 2008].txt */; };
		5631A7FF175804D800FBB5E2 /* MegaMaze [David Winter, 2007].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6E2175804D800FBB5E2 /* MegaMaze [David Winter, 2007].ch8 */; };
		5631A800175804D800FBB5E2 /* MegaMaze [David Winter, 2007].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6E3175804D800FBB5E2 /* MegaMaze [David Winter, 2007].txt */; };
		5631A801175804D800FBB5E2 /* MegaSirpinski [Sergey Naydenov, 2010].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6E4175804D800FBB5E2 /* MegaSirpinski [Sergey Naydenov, 2010].ch8 */; };
		5631A802175804D800FBB5E2 /* Twister Demo [Revival Studios, 2007].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6E5175804D800FBB5E2 /* Twister Demo [Revival Studios, 2007].ch8 */; };
		5631A803175804D800FBB5E2 /* Twister Demo [Revival Studios, 2007].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6E6175804D800FBB5E2 /* Twister Demo [Revival Studios, 2007].txt */; };
		5631A804175804D800FBB5E2 /* Bounce [Les Harris].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6E9175804D800FBB5E2 /* Bounce [Les Harris].ch8 */; };
		5631A805175804D800FBB5E2 /* Car Race Demo [Erik Bryntse, 1991].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6EA175804D800FBB5E2 /* Car Race Demo [Erik Bryntse, 1991].ch8 */; };
		5631A806175804D800FBB5E2 /* Car Race Demo [Erik Bryntse, 1991].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6EB175804D800FBB5E2 /* Car Race Demo [Erik Bryntse, 1991].txt */; };
		5631A807175804D800FBB5E2 /* Climax Slideshow - Part 1 [Revival Studios, 2008].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6EC175804D800FBB5E2 /* Climax Slideshow - Part 1 [Revival Studios, 2008].ch8 */; };
		5631A808175804D800FBB5E2 /* Climax Slideshow - Part 1 [Revival Studios, 2008].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6ED175804D800FBB5E2 /* Climax Slideshow - Part 1 [Revival Studios, 2008].txt */; };
		5631A809175804D800FBB5E2 /* Climax Slideshow - Part 2 [Revival Studios, 2008].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6EE175804D800FBB5E2 /* Climax Slideshow - Part 2 [Revival Studios, 2008].ch8 */; };
		5631A80A175804D800FBB5E2 /* Climax Slideshow - Part 2 [Revival Studios, 2008].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6EF175804D800FBB5E2 /* Climax Slideshow - Part 2 [Revival Studios, 2008].txt */; };
		5631A80B175804D800FBB5E2 /* Robot.ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6F0175804D800FBB5E2 /* Robot.ch8 */; };
		5631A80C175804D800FBB5E2 /* SCSerpinski [Sergey Naydenov, 2010].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6F1175804D800FBB5E2 /* SCSerpinski [Sergey Naydenov, 2010].ch8 */; };
		5631A80D175804D800FBB5E2 /* SCStars  [Sergey Naydenov, 2010].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6F2175804D800FBB5E2 /* SCStars  [Sergey Naydenov, 2010].ch8 */; };
		5631A80E175804D800FBB5E2 /* Super Particle Demo [zeroZshadow, 2008].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6F3175804D800FBB5E2 /* Super Particle Demo [zeroZshadow, 2008].ch8 */; };
		5631A80F175804D800FBB5E2 /* Super Particle Demo [zeroZshadow, 2008].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6F4175804D800FBB5E2 /* Super Particle Demo [zeroZshadow, 2008].txt */; };
		5631A810175804D800FBB5E2 /* SuperMaze [David Winter, 199x].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6F5175804D800FBB5E2 /* SuperMaze [David Winter, 199x].ch8 */; };
		5631A811175804D800FBB5E2 /* SuperMaze [David Winter, 199x].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6F6175804D800FBB5E2 /* SuperMaze [David Winter, 199x].txt */; };
		5631A812175804D800FBB5E2 /* SuperTrip8 Demo (2008) [Revival Studios].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6F7175804D800FBB5E2 /* SuperTrip8 Demo (2008) [Revival Studios].ch8 */; };
		5631A813175804D800FBB5E2 /* SuperTrip8 Demo (2008) [Revival Studios].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6F8175804D800FBB5E2 /* SuperTrip8 Demo (2008) [Revival Studios].txt */; };
		5631A814175804D800FBB5E2 /* Worms demo.ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6F9175804D800FBB5E2 /* Worms demo.ch8 */; };
		5631A815175804D800FBB5E2 /* Alien [Jonas Lindstedt, 1993].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6FB175804D800FBB5E2 /* Alien [Jonas Lindstedt, 1993].ch8 */; };
		5631A816175804D800FBB5E2 /* Alien [Jonas Lindstedt, 1993].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6FC175804D800FBB5E2 /* Alien [Jonas Lindstedt, 1993].txt */; };
		5631A817175804D800FBB5E2 /* Ant - In Search of Coke [Erin S. Catto].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6FD175804D800FBB5E2 /* Ant - In Search of Coke [Erin S. Catto].ch8 */; };
		5631A818175804D800FBB5E2 /* Blinky [Hans Christian Egeberg, 1991].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6FE175804D800FBB5E2 /* Blinky [Hans Christian Egeberg, 1991].ch8 */; };
		5631A819175804D800FBB5E2 /* Blinky [Hans Christian Egeberg, 1991].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A6FF175804D800FBB5E2 /* Blinky [Hans Christian Egeberg, 1991].txt */; };
		5631A81A175804D800FBB5E2 /* Car [Klaus von Sengbusch, 1994].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A700175804D800FBB5E2 /* Car [Klaus von Sengbusch, 1994].ch8 */; };
		5631A81B175804D800FBB5E2 /* Car [Klaus von Sengbusch, 1994].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A701175804D800FBB5E2 /* Car [Klaus von Sengbusch, 1994].txt */; };
		5631A81C175804D800FBB5E2 /* Field! [Al Roland, 1993] (alt).ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A702175804D800FBB5E2 /* Field! [Al Roland, 1993] (alt).ch8 */; };
		5631A81D175804D800FBB5E2 /* Field! [Al Roland, 1993].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A703175804D800FBB5E2 /* Field! [Al Roland, 1993].ch8 */; };
		5631A81E175804D800FBB5E2 /* Field! [Al Roland, 1993].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A704175804D800FBB5E2 /* Field! [Al Roland, 1993].txt */; };
		5631A81F175804D800FBB5E2 /* H. Piper [Paul Raines, 1991].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A705175804D800FBB5E2 /* H. Piper [Paul Raines, 1991].ch8 */; };
		5631A820175804D800FBB5E2 /* H. Piper [Paul Raines, 1991].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A706175804D800FBB5E2 /* H. Piper [Paul Raines, 1991].txt */; };
		5631A821175804D800FBB5E2 /* Joust [Erin S. Catto, 1993].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A707175804D800FBB5E2 /* Joust [Erin S. Catto, 1993].ch8 */; };
		5631A822175804D800FBB5E2 /* Joust [Erin S. Catto, 1993].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A708175804D800FBB5E2 /* Joust [Erin S. Catto, 1993].txt */; };
		5631A823175804D800FBB5E2 /* Laser.ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A709175804D800FBB5E2 /* Laser.ch8 */; };
		5631A824175804D800FBB5E2 /* Loopz (with difficulty select) [Hap, 2006].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A70A175804D800FBB5E2 /* Loopz (with difficulty select) [Hap, 2006].ch8 */; };
		5631A825175804D800FBB5E2 /* Loopz (with difficulty select) [Hap, 2006].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A70B175804D800FBB5E2 /* Loopz (with difficulty select) [Hap, 2006].txt */; };
		5631A826175804D800FBB5E2 /* Loopz [Andreas Daumann].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A70C175804D800FBB5E2 /* Loopz [Andreas Daumann].ch8 */; };
		5631A827175804D800FBB5E2 /* Magic Square [David Winter, 1997].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A70D175804D800FBB5E2 /* Magic Square [David Winter, 1997].ch8 */; };
		5631A828175804D800FBB5E2 /* Magic Square [David Winter, 1997].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A70E175804D800FBB5E2 /* Magic Square [David Winter, 1997].txt */; };
		5631A829175804D800FBB5E2 /* Matches.ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A70F175804D800FBB5E2 /* Matches.ch8 */; };
		5631A82A175804D800FBB5E2 /* Mines! - The minehunter [David Winter, 1997].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A710175804D800FBB5E2 /* Mines! - The minehunter [David Winter, 1997].ch8 */; };
		5631A82B175804D800FBB5E2 /* Single Dragon (Bomber Section) [David Nurser, 1993].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A711175804D800FBB5E2 /* Single Dragon (Bomber Section) [David Nurser, 1993].ch8 */; };
		5631A82C175804D800FBB5E2 /* Single Dragon (Bomber Section) [David Nurser, 1993].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A712175804D800FBB5E2 /* Single Dragon (Bomber Section) [David Nurser, 1993].txt */; };
		5631A82D175804D800FBB5E2 /* Single Dragon (Stages 1-2) [David Nurser, 1993].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A713175804D800FBB5E2 /* Single Dragon (Stages 1-2) [David Nurser, 1993].ch8 */; };
		5631A82E175804D800FBB5E2 /* Single Dragon (Stages 1-2) [David Nurser, 1993].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A714175804D800FBB5E2 /* Single Dragon (Stages 1-2) [David Nurser, 1993].txt */; };
		5631A82F175804D800FBB5E2 /* Sokoban [Hap, 2006] (alt).ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A715175804D800FBB5E2 /* Sokoban [Hap, 2006] (alt).ch8 */; };
		5631A830175804D800FBB5E2 /* Sokoban [Hap, 2006].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A716175804D800FBB5E2 /* Sokoban [Hap, 2006].ch8 */; };
		5631A831175804D800FBB5E2 /* Sokoban [Hap, 2006].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A717175804D800FBB5E2 /* Sokoban [Hap, 2006].txt */; };
		5631A832175804D800FBB5E2 /* Spacefight 2091 [Carsten Soerensen, 1992].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A718175804D800FBB5E2 /* Spacefight 2091 [Carsten Soerensen, 1992].ch8 */; };
		5631A833175804D800FBB5E2 /* Spacefight 2091 [Carsten Soerensen, 1992].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A719175804D800FBB5E2 /* Spacefight 2091 [Carsten Soerensen, 1992].txt */; };
		5631A834175804D800FBB5E2 /* Super Astro Dodge [Revival Studios, 2008].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A71A175804D800FBB5E2 /* Super Astro Dodge [Revival Studios, 2008].ch8 */; };
		5631A835175804D800FBB5E2 /* Super Astro Dodge [Revival Studios, 2008].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A71B175804D800FBB5E2 /* Super Astro Dodge [Revival Studios, 2008].txt */; };
		5631A836175804D800FBB5E2 /* SuperWorm V3 [RB, 1992].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A71C175804D800FBB5E2 /* SuperWorm V3 [RB, 1992].ch8 */; };
		5631A837175804D800FBB5E2 /* SuperWorm V4 [RB-Revival Studios, 2007].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A71D175804D800FBB5E2 /* SuperWorm V4 [RB-Revival Studios, 2007].ch8 */; };
		5631A838175804D800FBB5E2 /* SuperWorm V4 [RB-Revival Studios, 2007].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A71E175804D800FBB5E2 /* SuperWorm V4 [RB-Revival Studios, 2007].txt */; };
		5631A839175804D800FBB5E2 /* U-Boat [Michael Kemper, 1994].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A71F175804D800FBB5E2 /* U-Boat [Michael Kemper, 1994].ch8 */; };
		5631A83A175804D800FBB5E2 /* U-Boat [Michael Kemper, 1994].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A720175804D800FBB5E2 /* U-Boat [Michael Kemper, 1994].txt */; };
		5631A83B175804D800FBB5E2 /* BMP Viewer (16x16 tiles) (MAME) [IQ_132].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A722175804D800FBB5E2 /* BMP Viewer (16x16 tiles) (MAME) [IQ_132].ch8 */; };
		5631A83C175804D800FBB5E2 /* BMP Viewer (Google) [IQ_132].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A723175804D800FBB5E2 /* BMP Viewer (Google) [IQ_132].ch8 */; };
		5631A83D175804D800FBB5E2 /* BMP Viewer - Flip-8 logo [Newsdee, 2006].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A724175804D800FBB5E2 /* BMP Viewer - Flip-8 logo [Newsdee, 2006].ch8 */; };
		5631A83E175804D800FBB5E2 /* BMP Viewer - Flip-8 logo [Newsdee, 2006].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A725175804D800FBB5E2 /* BMP Viewer - Flip-8 logo [Newsdee, 2006].txt */; };
		5631A83F175804D800FBB5E2 /* BMP Viewer - Kyori (SC example) [Hap, 2005].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A726175804D800FBB5E2 /* BMP Viewer - Kyori (SC example) [Hap, 2005].ch8 */; };
		5631A840175804D800FBB5E2 /* BMP Viewer - Kyori (SC example) [Hap, 2005].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A727175804D800FBB5E2 /* BMP Viewer - Kyori (SC example) [Hap, 2005].txt */; };
		5631A841175804D800FBB5E2 /* BMP Viewer - Let's Chip-8! [Koppepan, 2005].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A728175804D800FBB5E2 /* BMP Viewer - Let's Chip-8! [Koppepan, 2005].ch8 */; };
		5631A842175804D800FBB5E2 /* BMP Viewer - Let's Chip-8! [Koppepan, 2005].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A729175804D800FBB5E2 /* BMP Viewer - Let's Chip-8! [Koppepan, 2005].txt */; };
		5631A843175804D800FBB5E2 /* Emutest [Hap, 2006].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A72A175804D800FBB5E2 /* Emutest [Hap, 2006].ch8 */; };
		5631A844175804D800FBB5E2 /* Emutest [Hap, 2006].txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A72B175804D800FBB5E2 /* Emutest [Hap, 2006].txt */; };
		5631A845175804D800FBB5E2 /* Font Test [Newsdee, 2006].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A72C175804D800FBB5E2 /* Font Test [Newsdee, 2006].ch8 */; };
		5631A846175804D800FBB5E2 /* Hex Mixt.ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A72D175804D800FBB5E2 /* Hex Mixt.ch8 */; };
		5631A847175804D800FBB5E2 /* Line Demo.ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A72E175804D800FBB5E2 /* Line Demo.ch8 */; };
		5631A848175804D800FBB5E2 /* SC Test.ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A72F175804D800FBB5E2 /* SC Test.ch8 */; };
		5631A849175804D800FBB5E2 /* SC Test.txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A730175804D800FBB5E2 /* SC Test.txt */; };
		5631A84A175804D800FBB5E2 /* SCHIP Test [iq_132].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A731175804D800FBB5E2 /* SCHIP Test [iq_132].ch8 */; };
		5631A84B175804D800FBB5E2 /* Scroll Test (modified) [Garstyciuks].ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A732175804D800FBB5E2 /* Scroll Test (modified) [Garstyciuks].ch8 */; };
		5631A84C175804D800FBB5E2 /* Scroll Test.ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A733175804D800FBB5E2 /* Scroll Test.ch8 */; };
		5631A84D175804D800FBB5E2 /* SuperChip Test.ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A734175804D800FBB5E2 /* SuperChip Test.ch8 */; };
		5631A84E175804D800FBB5E2 /* SuperChip Test.txt in Resources */ = {isa = PBXBuildFile; fileRef = 5631A735175804D800FBB5E2 /* SuperChip Test.txt */; };
		5631A84F175804D800FBB5E2 /* Test128.ch8 in Resources */ = {isa = PBXBuildFile; fileRef = 5631A736175804D800FBB5E2 /* Test128.ch8 */; };
		56542F0A17552FB300BFA0CB /* Opcode.m in Sources */ = {isa = PBXBuildFile; fileRef = 56542F0917552FB300BFA0CB /* Opcode.m */; };
		566A50061752866A00A90940 /* UIKit.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 566A50051752866A00A90940 /* UIKit.framework */; };
		566A50081752866A00A90940 /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 566A50071752866A00A90940 /* Foundation.framework */; };
		566A500A1752866A00A90940 /* CoreGraphics.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 566A50091752866A00A90940 /* CoreGraphics.framework */; };
		566A50101752866A00A90940 /* InfoPlist.strings in Resources */ = {isa = PBXBuildFile; fileRef = 566A500E1752866A00A90940 /* InfoPlist.strings */; };
		566A50121752866A00A90940 /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 566A50111752866A00A90940 /* main.m */; };
		566A50161752866B00A90940 /* AppDelegate.m in Sources */ = {isa = PBXBuildFile; fileRef = 566A50151752866B00A90940 /* AppDelegate.m */; };
		566A50181752866B00A90940 /* Default.png in Resources */ = {isa = PBXBuildFile; fileRef = 566A50171752866B00A90940 /* Default.png */; };
		566A501A1752866B00A90940 /* Default@2x.png in Resources */ = {isa = PBXBuildFile; fileRef = 566A50191752866B00A90940 /* Default@2x.png */; };
		566A501C1752866B00A90940 /* Default-568h@2x.png in Resources */ = {isa = PBXBuildFile; fileRef = 566A501B1752866B00A90940 /* Default-568h@2x.png */; };
		566A501F1752866B00A90940 /* ViewController.m in Sources */ = {isa = PBXBuildFile; fileRef = 566A501E1752866B00A90940 /* ViewController.m */; };
		566A50221752866B00A90940 /* ViewController.xib in Resources */ = {isa = PBXBuildFile; fileRef = 566A50201752866B00A90940 /* ViewController.xib */; };
		566A502B17529F1000A90940 /* Chip8.m in Sources */ = {isa = PBXBuildFile; fileRef = 566A502A17529F1000A90940 /* Chip8.m */; };
		566A50341752BA2700A90940 /* Chip8jntUtils.m in Sources */ = {isa = PBXBuildFile; fileRef = 566A50331752BA2700A90940 /* Chip8jntUtils.m */; };
		569351E41754072E00911B2A /* Chip8Canvas.m in Sources */ = {isa = PBXBuildFile; fileRef = 569351E31754072E00911B2A /* Chip8Canvas.m */; };
		56A900DA17593AD3002EB134 /* DebugCell.m in Sources */ = {isa = PBXBuildFile; fileRef = 56A900D917593AD3002EB134 /* DebugCell.m */; };
		56A900DE17593BB6002EB134 /* DebugCell.xib in Resources */ = {isa = PBXBuildFile; fileRef = 56A900DD17593BB6002EB134 /* DebugCell.xib */; };
/* End PBXBuildFile section */

/* Begin PBXFileReference section */
		5631A613175804D700FBB5E2 /* Maze (alt) [David Winter, 199x].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Maze (alt) [David Winter, 199x].ch8"; sourceTree = "<group>"; };
		5631A614175804D700FBB5E2 /* Maze (alt) [David Winter, 199x].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Maze (alt) [David Winter, 199x].txt"; sourceTree = "<group>"; };
		5631A615175804D700FBB5E2 /* Maze [David Winter, 199x].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Maze [David Winter, 199x].ch8"; sourceTree = "<group>"; };
		5631A616175804D700FBB5E2 /* Maze [David Winter, 199x].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Maze [David Winter, 199x].txt"; sourceTree = "<group>"; };
		5631A617175804D700FBB5E2 /* Particle Demo [zeroZshadow, 2008].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Particle Demo [zeroZshadow, 2008].ch8"; sourceTree = "<group>"; };
		5631A618175804D700FBB5E2 /* Particle Demo [zeroZshadow, 2008].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Particle Demo [zeroZshadow, 2008].txt"; sourceTree = "<group>"; };
		5631A619175804D700FBB5E2 /* Sierpinski [Sergey Naydenov, 2010].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Sierpinski [Sergey Naydenov, 2010].ch8"; sourceTree = "<group>"; };
		5631A61A175804D700FBB5E2 /* Sirpinski [Sergey Naydenov, 2010].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Sirpinski [Sergey Naydenov, 2010].ch8"; sourceTree = "<group>"; };
		5631A61B175804D700FBB5E2 /* Stars [Sergey Naydenov, 2010].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Stars [Sergey Naydenov, 2010].ch8"; sourceTree = "<group>"; };
		5631A61C175804D700FBB5E2 /* Trip8 Demo (2008) [Revival Studios].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Trip8 Demo (2008) [Revival Studios].ch8"; sourceTree = "<group>"; };
		5631A61D175804D700FBB5E2 /* Trip8 Demo (2008) [Revival Studios].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Trip8 Demo (2008) [Revival Studios].txt"; sourceTree = "<group>"; };
		5631A61E175804D700FBB5E2 /* Zero Demo [zeroZshadow, 2007].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Zero Demo [zeroZshadow, 2007].ch8"; sourceTree = "<group>"; };
		5631A61F175804D700FBB5E2 /* Zero Demo [zeroZshadow, 2007].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Zero Demo [zeroZshadow, 2007].txt"; sourceTree = "<group>"; };
		5631A621175804D700FBB5E2 /* 15 Puzzle [Roger Ivie] (alt).ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "15 Puzzle [Roger Ivie] (alt).ch8"; sourceTree = "<group>"; };
		5631A622175804D700FBB5E2 /* 15 Puzzle [Roger Ivie].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "15 Puzzle [Roger Ivie].ch8"; sourceTree = "<group>"; };
		5631A623175804D700FBB5E2 /* 15 Puzzle [Roger Ivie].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "15 Puzzle [Roger Ivie].txt"; sourceTree = "<group>"; };
		5631A624175804D700FBB5E2 /* Addition Problems [Paul C. Moews].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Addition Problems [Paul C. Moews].ch8"; sourceTree = "<group>"; };
		5631A625175804D700FBB5E2 /* Airplane.ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = Airplane.ch8; sourceTree = "<group>"; };
		5631A626175804D700FBB5E2 /* Animal Race [Brian Astle].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Animal Race [Brian Astle].ch8"; sourceTree = "<group>"; };
		5631A627175804D700FBB5E2 /* Animal Race [Brian Astle].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Animal Race [Brian Astle].txt"; sourceTree = "<group>"; };
		5631A628175804D700FBB5E2 /* Astro Dodge [Revival Studios, 2008].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Astro Dodge [Revival Studios, 2008].ch8"; sourceTree = "<group>"; };
		5631A629175804D700FBB5E2 /* Astro Dodge [Revival Studios, 2008].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Astro Dodge [Revival Studios, 2008].txt"; sourceTree = "<group>"; };
		5631A62A175804D700FBB5E2 /* Biorhythm [Jef Winsor].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Biorhythm [Jef Winsor].ch8"; sourceTree = "<group>"; };
		5631A62B175804D700FBB5E2 /* Biorhythm [Jef Winsor].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Biorhythm [Jef Winsor].txt"; sourceTree = "<group>"; };
		5631A62C175804D700FBB5E2 /* Blinky [Hans Christian Egeberg, 1991].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Blinky [Hans Christian Egeberg, 1991].ch8"; sourceTree = "<group>"; };
		5631A62D175804D700FBB5E2 /* Blinky [Hans Christian Egeberg] (alt).ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Blinky [Hans Christian Egeberg] (alt).ch8"; sourceTree = "<group>"; };
		5631A62E175804D700FBB5E2 /* Blitz [David Winter].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Blitz [David Winter].ch8"; sourceTree = "<group>"; };
		5631A62F175804D700FBB5E2 /* Blitz [David Winter].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Blitz [David Winter].txt"; sourceTree = "<group>"; };
		5631A630175804D700FBB5E2 /* Bowling [Gooitzen van der Wal].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Bowling [Gooitzen van der Wal].ch8"; sourceTree = "<group>"; };
		5631A631175804D700FBB5E2 /* Bowling [Gooitzen van der Wal].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Bowling [Gooitzen van der Wal].txt"; sourceTree = "<group>"; };
		5631A632175804D700FBB5E2 /* Breakout (Brix hack) [David Winter, 1997].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Breakout (Brix hack) [David Winter, 1997].ch8"; sourceTree = "<group>"; };
		5631A633175804D700FBB5E2 /* Breakout (Brix hack) [David Winter, 1997].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Breakout (Brix hack) [David Winter, 1997].txt"; sourceTree = "<group>"; };
		5631A634175804D700FBB5E2 /* Breakout [Carmelo Cortez, 1979].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Breakout [Carmelo Cortez, 1979].ch8"; sourceTree = "<group>"; };
		5631A635175804D700FBB5E2 /* Breakout [Carmelo Cortez, 1979].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Breakout [Carmelo Cortez, 1979].txt"; sourceTree = "<group>"; };
		5631A636175804D700FBB5E2 /* Brick (Brix hack, 1990).ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Brick (Brix hack, 1990).ch8"; sourceTree = "<group>"; };
		5631A637175804D700FBB5E2 /* Brick (Brix hack, 1990).txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Brick (Brix hack, 1990).txt"; sourceTree = "<group>"; };
		5631A638175804D700FBB5E2 /* Brix [Andreas Gustafsson, 1990].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Brix [Andreas Gustafsson, 1990].ch8"; sourceTree = "<group>"; };
		5631A639175804D700FBB5E2 /* Cave.ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = Cave.ch8; sourceTree = "<group>"; };
		5631A63A175804D700FBB5E2 /* Coin Flipping [Carmelo Cortez, 1978].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Coin Flipping [Carmelo Cortez, 1978].ch8"; sourceTree = "<group>"; };
		5631A63B175804D700FBB5E2 /* Coin Flipping [Carmelo Cortez, 1978].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Coin Flipping [Carmelo Cortez, 1978].txt"; sourceTree = "<group>"; };
		5631A63C175804D700FBB5E2 /* Connect 4 [David Winter].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Connect 4 [David Winter].ch8"; sourceTree = "<group>"; };
		5631A63D175804D700FBB5E2 /* Connect 4 [David Winter].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Connect 4 [David Winter].txt"; sourceTree = "<group>"; };
		5631A63E175804D700FBB5E2 /* Craps [Camerlo Cortez, 1978].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Craps [Camerlo Cortez, 1978].ch8"; sourceTree = "<group>"; };
		5631A63F175804D700FBB5E2 /* Craps [Camerlo Cortez, 1978].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Craps [Camerlo Cortez, 1978].txt"; sourceTree = "<group>"; };
		5631A640175804D700FBB5E2 /* Deflection [John Fort].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Deflection [John Fort].ch8"; sourceTree = "<group>"; };
		5631A641175804D700FBB5E2 /* Deflection [John Fort].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Deflection [John Fort].txt"; sourceTree = "<group>"; };
		5631A642175804D700FBB5E2 /* Figures.ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = Figures.ch8; sourceTree = "<group>"; };
		5631A643175804D700FBB5E2 /* Filter.ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = Filter.ch8; sourceTree = "<group>"; };
		5631A644175804D700FBB5E2 /* Guess [David Winter] (alt).ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Guess [David Winter] (alt).ch8"; sourceTree = "<group>"; };
		5631A645175804D700FBB5E2 /* Guess [David Winter] (alt).txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Guess [David Winter] (alt).txt"; sourceTree = "<group>"; };
		5631A646175804D700FBB5E2 /* Guess [David Winter].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Guess [David Winter].ch8"; sourceTree = "<group>"; };
		5631A647175804D700FBB5E2 /* Guess [David Winter].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Guess [David Winter].txt"; sourceTree = "<group>"; };
		5631A648175804D700FBB5E2 /* Hi-Lo [Jef Winsor, 1978].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Hi-Lo [Jef Winsor, 1978].ch8"; sourceTree = "<group>"; };
		5631A649175804D700FBB5E2 /* Hi-Lo [Jef Winsor, 1978].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Hi-Lo [Jef Winsor, 1978].txt"; sourceTree = "<group>"; };
		5631A64A175804D700FBB5E2 /* Hidden [David Winter, 1996].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Hidden [David Winter, 1996].ch8"; sourceTree = "<group>"; };
		5631A64B175804D700FBB5E2 /* Hidden [David Winter, 1996].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Hidden [David Winter, 1996].txt"; sourceTree = "<group>"; };
		5631A64C175804D700FBB5E2 /* Kaleidoscope [Joseph Weisbecker, 1978].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Kaleidoscope [Joseph Weisbecker, 1978].ch8"; sourceTree = "<group>"; };
		5631A64D175804D700FBB5E2 /* Kaleidoscope [Joseph Weisbecker, 1978].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Kaleidoscope [Joseph Weisbecker, 1978].txt"; sourceTree = "<group>"; };
		5631A64E175804D700FBB5E2 /* Landing.ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = Landing.ch8; sourceTree = "<group>"; };
		5631A64F175804D700FBB5E2 /* Lunar Lander (Udo Pernisz, 1979).ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Lunar Lander (Udo Pernisz, 1979).ch8"; sourceTree = "<group>"; };
		5631A650175804D700FBB5E2 /* Lunar Lander [Udo Pernisz, 1979].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Lunar Lander [Udo Pernisz, 1979].txt"; sourceTree = "<group>"; };
		5631A651175804D700FBB5E2 /* Mastermind FourRow (Robert Lindley, 1978).ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Mastermind FourRow (Robert Lindley, 1978).ch8"; sourceTree = "<group>"; };
		5631A652175804D700FBB5E2 /* Mastermind FourRow (Robert Lindley, 1978).txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Mastermind FourRow (Robert Lindley, 1978).txt"; sourceTree = "<group>"; };
		5631A653175804D700FBB5E2 /* Merlin [David Winter].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Merlin [David Winter].ch8"; sourceTree = "<group>"; };
		5631A654175804D700FBB5E2 /* Merlin [David Winter].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Merlin [David Winter].txt"; sourceTree = "<group>"; };
		5631A655175804D700FBB5E2 /* Missile [David Winter].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Missile [David Winter].ch8"; sourceTree = "<group>"; };
		5631A656175804D700FBB5E2 /* Most Dangerous Game [Peter Maruhnic].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Most Dangerous Game [Peter Maruhnic].ch8"; sourceTree = "<group>"; };
		5631A657175804D700FBB5E2 /* Most Dangerous Game [Peter Maruhnic].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Most Dangerous Game [Peter Maruhnic].txt"; sourceTree = "<group>"; };
		5631A658175804D700FBB5E2 /* Nim [Carmelo Cortez, 1978].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Nim [Carmelo Cortez, 1978].ch8"; sourceTree = "<group>"; };
		5631A659175804D700FBB5E2 /* Nim [Carmelo Cortez, 1978].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Nim [Carmelo Cortez, 1978].txt"; sourceTree = "<group>"; };
		5631A65A175804D700FBB5E2 /* Paddles.ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = Paddles.ch8; sourceTree = "<group>"; };
		5631A65B175804D700FBB5E2 /* Pong (1 player).ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Pong (1 player).ch8"; sourceTree = "<group>"; };
		5631A65C175804D700FBB5E2 /* Pong (alt).ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Pong (alt).ch8"; sourceTree = "<group>"; };
		5631A65D175804D700FBB5E2 /* Pong 2 (Pong hack) [David Winter, 1997].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Pong 2 (Pong hack) [David Winter, 1997].ch8"; sourceTree = "<group>"; };
		5631A65E175804D700FBB5E2 /* Pong [Paul Vervalin, 1990].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Pong [Paul Vervalin, 1990].ch8"; sourceTree = "<group>"; };
		5631A65F175804D700FBB5E2 /* Pong [Paul Vervalin, 1990].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Pong [Paul Vervalin, 1990].txt"; sourceTree = "<group>"; };
		5631A660175804D700FBB5E2 /* Programmable Spacefighters [Jef Winsor].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Programmable Spacefighters [Jef Winsor].ch8"; sourceTree = "<group>"; };
		5631A661175804D700FBB5E2 /* Programmable Spacefighters [Jef Winsor].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Programmable Spacefighters [Jef Winsor].txt"; sourceTree = "<group>"; };
		5631A662175804D700FBB5E2 /* Puzzle.ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = Puzzle.ch8; sourceTree = "<group>"; };
		5631A663175804D700FBB5E2 /* Reversi [Philip Baltzer].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Reversi [Philip Baltzer].ch8"; sourceTree = "<group>"; };
		5631A664175804D700FBB5E2 /* Reversi [Philip Baltzer].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Reversi [Philip Baltzer].txt"; sourceTree = "<group>"; };
		5631A665175804D700FBB5E2 /* Rocket [Joseph Weisbecker, 1978].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Rocket [Joseph Weisbecker, 1978].ch8"; sourceTree = "<group>"; };
		5631A666175804D700FBB5E2 /* Rocket Launch [Jonas Lindstedt].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Rocket Launch [Jonas Lindstedt].ch8"; sourceTree = "<group>"; };
		5631A667175804D700FBB5E2 /* Rocket Launcher.ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Rocket Launcher.ch8"; sourceTree = "<group>"; };
		5631A668175804D700FBB5E2 /* Rush Hour [Hap, 2006] (alt).ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Rush Hour [Hap, 2006] (alt).ch8"; sourceTree = "<group>"; };
		5631A669175804D700FBB5E2 /* Rush Hour [Hap, 2006].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Rush Hour [Hap, 2006].ch8"; sourceTree = "<group>"; };
		5631A66A175804D700FBB5E2 /* Rush Hour [Hap, 2006].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Rush Hour [Hap, 2006].txt"; sourceTree = "<group>"; };
		5631A66B175804D700FBB5E2 /* Russian Roulette [Carmelo Cortez, 1978].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Russian Roulette [Carmelo Cortez, 1978].ch8"; sourceTree = "<group>"; };
		5631A66C175804D700FBB5E2 /* Russian Roulette [Carmelo Cortez, 1978].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Russian Roulette [Carmelo Cortez, 1978].txt"; sourceTree = "<group>"; };
		5631A66D175804D700FBB5E2 /* Sequence Shoot [Joyce Weisbecker].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Sequence Shoot [Joyce Weisbecker].ch8"; sourceTree = "<group>"; };
		5631A66E175804D700FBB5E2 /* Sequence Shoot [Joyce Weisbecker].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Sequence Shoot [Joyce Weisbecker].txt"; sourceTree = "<group>"; };
		5631A66F175804D700FBB5E2 /* Shooting Stars [Philip Baltzer, 1978].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Shooting Stars [Philip Baltzer, 1978].ch8"; sourceTree = "<group>"; };
		5631A670175804D700FBB5E2 /* Shooting Stars [Philip Baltzer, 1978].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Shooting Stars [Philip Baltzer, 1978].txt"; sourceTree = "<group>"; };
		5631A671175804D700FBB5E2 /* Slide [Joyce Weisbecker].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Slide [Joyce Weisbecker].ch8"; sourceTree = "<group>"; };
		5631A672175804D700FBB5E2 /* Slide [Joyce Weisbecker].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Slide [Joyce Weisbecker].txt"; sourceTree = "<group>"; };
		5631A673175804D700FBB5E2 /* Soccer.ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = Soccer.ch8; sourceTree = "<group>"; };
		5631A674175804D700FBB5E2 /* Space Flight.ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Space Flight.ch8"; sourceTree = "<group>"; };
		5631A675175804D700FBB5E2 /* Space Intercept [Joseph Weisbecker, 1978].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Space Intercept [Joseph Weisbecker, 1978].ch8"; sourceTree = "<group>"; };
		5631A676175804D700FBB5E2 /* Space Intercept [Joseph Weisbecker, 1978].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Space Intercept [Joseph Weisbecker, 1978].txt"; sourceTree = "<group>"; };
		5631A677175804D700FBB5E2 /* Space Invaders [David Winter] (alt).ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Space Invaders [David Winter] (alt).ch8"; sourceTree = "<group>"; };
		5631A678175804D700FBB5E2 /* Space Invaders [David Winter] (alt).txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Space Invaders [David Winter] (alt).txt"; sourceTree = "<group>"; };
		5631A679175804D700FBB5E2 /* Space Invaders [David Winter].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Space Invaders [David Winter].ch8"; sourceTree = "<group>"; };
		5631A67A175804D700FBB5E2 /* Space Invaders [David Winter].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Space Invaders [David Winter].txt"; sourceTree = "<group>"; };
		5631A67B175804D700FBB5E2 /* Spooky Spot [Joseph Weisbecker, 1978].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Spooky Spot [Joseph Weisbecker, 1978].ch8"; sourceTree = "<group>"; };
		5631A67C175804D700FBB5E2 /* Spooky Spot [Joseph Weisbecker, 1978].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Spooky Spot [Joseph Weisbecker, 1978].txt"; sourceTree = "<group>"; };
		5631A67D175804D700FBB5E2 /* Squash [David Winter].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Squash [David Winter].ch8"; sourceTree = "<group>"; };
		5631A67E175804D700FBB5E2 /* Submarine [Carmelo Cortez, 1978].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Submarine [Carmelo Cortez, 1978].ch8"; sourceTree = "<group>"; };
		5631A67F175804D700FBB5E2 /* Submarine [Carmelo Cortez, 1978].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Submarine [Carmelo Cortez, 1978].txt"; sourceTree = "<group>"; };
		5631A680175804D700FBB5E2 /* Sum Fun [Joyce Weisbecker].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Sum Fun [Joyce Weisbecker].ch8"; sourceTree = "<group>"; };
		5631A681175804D700FBB5E2 /* Sum Fun [Joyce Weisbecker].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Sum Fun [Joyce Weisbecker].txt"; sourceTree = "<group>"; };
		5631A682175804D700FBB5E2 /* Syzygy [Roy Trevino, 1990].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Syzygy [Roy Trevino, 1990].ch8"; sourceTree = "<group>"; };
		5631A683175804D700FBB5E2 /* Syzygy [Roy Trevino, 1990].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Syzygy [Roy Trevino, 1990].txt"; sourceTree = "<group>"; };
		5631A684175804D700FBB5E2 /* Tank.ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = Tank.ch8; sourceTree = "<group>"; };
		5631A685175804D700FBB5E2 /* Tank.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = Tank.txt; sourceTree = "<group>"; };
		5631A686175804D700FBB5E2 /* Tapeworm [JDR, 1999].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Tapeworm [JDR, 1999].ch8"; sourceTree = "<group>"; };
		5631A687175804D700FBB5E2 /* Tetris [Fran Dachille, 1991].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Tetris [Fran Dachille, 1991].ch8"; sourceTree = "<group>"; };
		5631A688175804D700FBB5E2 /* Tetris [Fran Dachille, 1991].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Tetris [Fran Dachille, 1991].txt"; sourceTree = "<group>"; };
		5631A689175804D700FBB5E2 /* Tic-Tac-Toe [David Winter].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Tic-Tac-Toe [David Winter].ch8"; sourceTree = "<group>"; };
		5631A68A175804D700FBB5E2 /* Timebomb.ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = Timebomb.ch8; sourceTree = "<group>"; };
		5631A68B175804D700FBB5E2 /* Tron.ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = Tron.ch8; sourceTree = "<group>"; };
		5631A68C175804D700FBB5E2 /* UFO [Lutz V, 1992].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "UFO [Lutz V, 1992].ch8"; sourceTree = "<group>"; };
		5631A68D175804D700FBB5E2 /* UFO [Lutz V, 1992].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "UFO [Lutz V, 1992].txt"; sourceTree = "<group>"; };
		5631A68E175804D700FBB5E2 /* Vers [JMN, 1991].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Vers [JMN, 1991].ch8"; sourceTree = "<group>"; };
		5631A68F175804D700FBB5E2 /* Vertical Brix [Paul Robson, 1996].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Vertical Brix [Paul Robson, 1996].ch8"; sourceTree = "<group>"; };
		5631A690175804D700FBB5E2 /* Wall [David Winter].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Wall [David Winter].ch8"; sourceTree = "<group>"; };
		5631A691175804D700FBB5E2 /* Wipe Off [Joseph Weisbecker].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Wipe Off [Joseph Weisbecker].ch8"; sourceTree = "<group>"; };
		5631A692175804D700FBB5E2 /* Worm V4 [RB-Revival Studios, 2007].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Worm V4 [RB-Revival Studios, 2007].ch8"; sourceTree = "<group>"; };
		5631A693175804D700FBB5E2 /* Worm V4 [RB-Revival Studios, 2007].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Worm V4 [RB-Revival Studios, 2007].txt"; sourceTree = "<group>"; };
		5631A694175804D700FBB5E2 /* X-Mirror.ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "X-Mirror.ch8"; sourceTree = "<group>"; };
		5631A695175804D700FBB5E2 /* ZeroPong [zeroZshadow, 2007].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "ZeroPong [zeroZshadow, 2007].ch8"; sourceTree = "<group>"; };
		5631A697175804D700FBB5E2 /* !hires_information.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "!hires_information.txt"; sourceTree = "<group>"; };
		5631A698175804D700FBB5E2 /* Astro Dodge Hires [Revival Studios, 2008].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Astro Dodge Hires [Revival Studios, 2008].ch8"; sourceTree = "<group>"; };
		5631A699175804D700FBB5E2 /* Astro Dodge Hires [Revival Studios, 2008].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Astro Dodge Hires [Revival Studios, 2008].txt"; sourceTree = "<group>"; };
		5631A69A175804D700FBB5E2 /* Hires Maze [David Winter, 199x].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Hires Maze [David Winter, 199x].ch8"; sourceTree = "<group>"; };
		5631A69B175804D700FBB5E2 /* Hires Maze [David Winter, 199x].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Hires Maze [David Winter, 199x].txt"; sourceTree = "<group>"; };
		5631A69C175804D700FBB5E2 /* Hires Particle Demo [zeroZshadow, 2008].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Hires Particle Demo [zeroZshadow, 2008].ch8"; sourceTree = "<group>"; };
		5631A69D175804D700FBB5E2 /* Hires Particle Demo [zeroZshadow, 2008].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Hires Particle Demo [zeroZshadow, 2008].txt"; sourceTree = "<group>"; };
		5631A69E175804D700FBB5E2 /* Hires Sierpinski [Sergey Naydenov, 2010].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Hires Sierpinski [Sergey Naydenov, 2010].ch8"; sourceTree = "<group>"; };
		5631A69F175804D700FBB5E2 /* Hires Stars [Sergey Naydenov, 2010].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Hires Stars [Sergey Naydenov, 2010].ch8"; sourceTree = "<group>"; };
		5631A6A0175804D700FBB5E2 /* Hires Test [Tom Swan, 1979].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Hires Test [Tom Swan, 1979].ch8"; sourceTree = "<group>"; };
		5631A6A1175804D700FBB5E2 /* Hires Worm V4 [RB-Revival Studios, 2007].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Hires Worm V4 [RB-Revival Studios, 2007].ch8"; sourceTree = "<group>"; };
		5631A6A2175804D700FBB5E2 /* Hires Worm V4 [RB-Revival Studios, 2007].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Hires Worm V4 [RB-Revival Studios, 2007].txt"; sourceTree = "<group>"; };
		5631A6A3175804D700FBB5E2 /* Trip8 Hires Demo (2008) [Revival Studios].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Trip8 Hires Demo (2008) [Revival Studios].ch8"; sourceTree = "<group>"; };
		5631A6A4175804D700FBB5E2 /* Trip8 Hires Demo (2008) [Revival Studios].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Trip8 Hires Demo (2008) [Revival Studios].txt"; sourceTree = "<group>"; };
		5631A6A6175804D700FBB5E2 /* BMP Viewer - Hello (C8 example) [Hap, 2005].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "BMP Viewer - Hello (C8 example) [Hap, 2005].ch8"; sourceTree = "<group>"; };
		5631A6A7175804D700FBB5E2 /* BMP Viewer - Hello (C8 example) [Hap, 2005].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "BMP Viewer - Hello (C8 example) [Hap, 2005].txt"; sourceTree = "<group>"; };
		5631A6A8175804D700FBB5E2 /* Chip8 emulator Logo [Garstyciuks].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Chip8 emulator Logo [Garstyciuks].ch8"; sourceTree = "<group>"; };
		5631A6A9175804D700FBB5E2 /* Chip8 Picture.ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Chip8 Picture.ch8"; sourceTree = "<group>"; };
		5631A6AA175804D700FBB5E2 /* Clock Program [Bill Fisher, 1981].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Clock Program [Bill Fisher, 1981].ch8"; sourceTree = "<group>"; };
		5631A6AB175804D700FBB5E2 /* Clock Program [Bill Fisher, 1981].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Clock Program [Bill Fisher, 1981].txt"; sourceTree = "<group>"; };
		5631A6AC175804D700FBB5E2 /* Delay Timer Test [Matthew Mikolay, 2010].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Delay Timer Test [Matthew Mikolay, 2010].ch8"; sourceTree = "<group>"; };
		5631A6AD175804D700FBB5E2 /* Delay Timer Test [Matthew Mikolay, 2010].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Delay Timer Test [Matthew Mikolay, 2010].txt"; sourceTree = "<group>"; };
		5631A6AE175804D700FBB5E2 /* Division Test [Sergey Naydenov, 2010].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Division Test [Sergey Naydenov, 2010].ch8"; sourceTree = "<group>"; };
		5631A6AF175804D700FBB5E2 /* Fishie [Hap, 2005].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Fishie [Hap, 2005].ch8"; sourceTree = "<group>"; };
		5631A6B0175804D700FBB5E2 /* Fishie [Hap, 2005].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Fishie [Hap, 2005].txt"; sourceTree = "<group>"; };
		5631A6B1175804D700FBB5E2 /* Framed MK1 [GV Samways, 1980].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Framed MK1 [GV Samways, 1980].ch8"; sourceTree = "<group>"; };
		5631A6B2175804D700FBB5E2 /* Framed MK1 [GV Samways, 1980].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Framed MK1 [GV Samways, 1980].txt"; sourceTree = "<group>"; };
		5631A6B3175804D700FBB5E2 /* Framed MK2 [GV Samways, 1980].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Framed MK2 [GV Samways, 1980].ch8"; sourceTree = "<group>"; };
		5631A6B4175804D700FBB5E2 /* Framed MK2 [GV Samways, 1980].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Framed MK2 [GV Samways, 1980].txt"; sourceTree = "<group>"; };
		5631A6B5175804D700FBB5E2 /* IBM Logo.ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "IBM Logo.ch8"; sourceTree = "<group>"; };
		5631A6B6175804D700FBB5E2 /* Jumping X and O [Harry Kleinberg, 1977].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Jumping X and O [Harry Kleinberg, 1977].ch8"; sourceTree = "<group>"; };
		5631A6B7175804D700FBB5E2 /* Jumping X and O [Harry Kleinberg, 1977].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Jumping X and O [Harry Kleinberg, 1977].txt"; sourceTree = "<group>"; };
		5631A6B8175804D700FBB5E2 /* Keypad Test [Hap, 2006].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Keypad Test [Hap, 2006].ch8"; sourceTree = "<group>"; };
		5631A6B9175804D700FBB5E2 /* Keypad Test [Hap, 2006].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Keypad Test [Hap, 2006].txt"; sourceTree = "<group>"; };
		5631A6BA175804D700FBB5E2 /* Life [GV Samways, 1980].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Life [GV Samways, 1980].ch8"; sourceTree = "<group>"; };
		5631A6BB175804D800FBB5E2 /* Life [GV Samways, 1980].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Life [GV Samways, 1980].txt"; sourceTree = "<group>"; };
		5631A6BC175804D800FBB5E2 /* Minimal game [Revival Studios, 2007].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Minimal game [Revival Studios, 2007].ch8"; sourceTree = "<group>"; };
		5631A6BD175804D800FBB5E2 /* Random Number Test [Matthew Mikolay, 2010].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Random Number Test [Matthew Mikolay, 2010].ch8"; sourceTree = "<group>"; };
		5631A6BE175804D800FBB5E2 /* Random Number Test [Matthew Mikolay, 2010].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Random Number Test [Matthew Mikolay, 2010].txt"; sourceTree = "<group>"; };
		5631A6BF175804D800FBB5E2 /* SQRT Test [Sergey Naydenov, 2010].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "SQRT Test [Sergey Naydenov, 2010].ch8"; sourceTree = "<group>"; };
		5631A6C1175804D800FBB5E2 /* Blockout [Steve Houk].c8x */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Blockout [Steve Houk].c8x"; sourceTree = "<group>"; };
		5631A6C2175804D800FBB5E2 /* Blockout [Steve Houk].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Blockout [Steve Houk].txt"; sourceTree = "<group>"; };
		5631A6C3175804D800FBB5E2 /* Color Kaleidoscope [Steve Houk, 1978].c8x */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Color Kaleidoscope [Steve Houk, 1978].c8x"; sourceTree = "<group>"; };
		5631A6C4175804D800FBB5E2 /* Color Kaleidoscope [Steve Houk, 1978].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Color Kaleidoscope [Steve Houk, 1978].txt"; sourceTree = "<group>"; };
		5631A6C5175804D800FBB5E2 /* ColourTest.c8x */ = {isa = PBXFileReference; lastKnownFileType = file; path = ColourTest.c8x; sourceTree = "<group>"; };
		5631A6C7175804D800FBB5E2 /* Maze 2 (ETI660 Hybrid).ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Maze 2 (ETI660 Hybrid).ch8"; sourceTree = "<group>"; };
		5631A6C8175804D800FBB5E2 /* Music Maker (ETI660 Hybrid) [Peter Collins, 198x].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Music Maker (ETI660 Hybrid) [Peter Collins, 198x].ch8"; sourceTree = "<group>"; };
		5631A6C9175804D800FBB5E2 /* Music Maker (ETI660 Hybrid) [Peter Collins, 198x].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Music Maker (ETI660 Hybrid) [Peter Collins, 198x].txt"; sourceTree = "<group>"; };
		5631A6CA175804D800FBB5E2 /* Pong (ETI660 Hybrid).ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Pong (ETI660 Hybrid).ch8"; sourceTree = "<group>"; };
		5631A6CB175804D800FBB5E2 /* Space Invaders (ETI660 Hybrid) [P. Easdown,198x].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Space Invaders (ETI660 Hybrid) [P. Easdown,198x].ch8"; sourceTree = "<group>"; };
		5631A6CC175804D800FBB5E2 /* Space Invaders (ETI660 Hybrid) [P. Easdown,198x].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Space Invaders (ETI660 Hybrid) [P. Easdown,198x].txt"; sourceTree = "<group>"; };
		5631A6CD175804D800FBB5E2 /* Wipeout (ETI660 hybrid) [W.F. Kreykes, 1982].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Wipeout (ETI660 hybrid) [W.F. Kreykes, 1982].ch8"; sourceTree = "<group>"; };
		5631A6CE175804D800FBB5E2 /* Wipeout (ETI660 hybrid) [W.F. Kreykes, 1982].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Wipeout (ETI660 hybrid) [W.F. Kreykes, 1982].txt"; sourceTree = "<group>"; };
		5631A6D0175804D800FBB5E2 /* Bingo [Andrew Modla] (hybrid).ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Bingo [Andrew Modla] (hybrid).ch8"; sourceTree = "<group>"; };
		5631A6D1175804D800FBB5E2 /* Bingo [Andrew Modla] (hybrid).txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Bingo [Andrew Modla] (hybrid).txt"; sourceTree = "<group>"; };
		5631A6D2175804D800FBB5E2 /* Blackjack [Andrew Modla] (hybrid).ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Blackjack [Andrew Modla] (hybrid).ch8"; sourceTree = "<group>"; };
		5631A6D3175804D800FBB5E2 /* Blackjack [Andrew Modla] (hybrid).txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Blackjack [Andrew Modla] (hybrid).txt"; sourceTree = "<group>"; };
		5631A6D4175804D800FBB5E2 /* Boot-128 (hybrid).ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Boot-128 (hybrid).ch8"; sourceTree = "<group>"; };
		5631A6D5175804D800FBB5E2 /* Message Center [Andrew Modla] (hybrid).ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Message Center [Andrew Modla] (hybrid).ch8"; sourceTree = "<group>"; };
		5631A6D6175804D800FBB5E2 /* Message Center [Andrew Modla] (hybrid).txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Message Center [Andrew Modla] (hybrid).txt"; sourceTree = "<group>"; };
		5631A6D7175804D800FBB5E2 /* Video Display Drawing Game [Joseph Weisbecker] (hybrid).ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Video Display Drawing Game [Joseph Weisbecker] (hybrid).ch8"; sourceTree = "<group>"; };
		5631A6D8175804D800FBB5E2 /* Video Display Drawing Game [Joseph Weisbecker] (hybrid).txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Video Display Drawing Game [Joseph Weisbecker] (hybrid).txt"; sourceTree = "<group>"; };
		5631A6D9175804D800FBB5E2 /* Pinball [Andrew Modla].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Pinball [Andrew Modla].ch8"; sourceTree = "<group>"; };
		5631A6DA175804D800FBB5E2 /* Pinball [Andrew Modla].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Pinball [Andrew Modla].txt"; sourceTree = "<group>"; };
		5631A6DB175804D800FBB5E2 /* SoundTest.c8x */ = {isa = PBXFileReference; lastKnownFileType = file; path = SoundTest.c8x; sourceTree = "<group>"; };
		5631A6DC175804D800FBB5E2 /* Chip8 Pack - Readme.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Chip8 Pack - Readme.txt"; sourceTree = "<group>"; };
		5631A6DD175804D800FBB5E2 /* Latest Updates.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Latest Updates.txt"; sourceTree = "<group>"; };
		5631A6DF175804D800FBB5E2 /* Mega Minimal [Revival Studios, 2007].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Mega Minimal [Revival Studios, 2007].ch8"; sourceTree = "<group>"; };
		5631A6E0175804D800FBB5E2 /* Mega Particle Demo [zeroZshadow, 2008].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Mega Particle Demo [zeroZshadow, 2008].ch8"; sourceTree = "<group>"; };
		5631A6E1175804D800FBB5E2 /* Mega Particle Demo [zeroZshadow, 2008].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Mega Particle Demo [zeroZshadow, 2008].txt"; sourceTree = "<group>"; };
		5631A6E2175804D800FBB5E2 /* MegaMaze [David Winter, 2007].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "MegaMaze [David Winter, 2007].ch8"; sourceTree = "<group>"; };
		5631A6E3175804D800FBB5E2 /* MegaMaze [David Winter, 2007].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "MegaMaze [David Winter, 2007].txt"; sourceTree = "<group>"; };
		5631A6E4175804D800FBB5E2 /* MegaSirpinski [Sergey Naydenov, 2010].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "MegaSirpinski [Sergey Naydenov, 2010].ch8"; sourceTree = "<group>"; };
		5631A6E5175804D800FBB5E2 /* Twister Demo [Revival Studios, 2007].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Twister Demo [Revival Studios, 2007].ch8"; sourceTree = "<group>"; };
		5631A6E6175804D800FBB5E2 /* Twister Demo [Revival Studios, 2007].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Twister Demo [Revival Studios, 2007].txt"; sourceTree = "<group>"; };
		5631A6E9175804D800FBB5E2 /* Bounce [Les Harris].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Bounce [Les Harris].ch8"; sourceTree = "<group>"; };
		5631A6EA175804D800FBB5E2 /* Car Race Demo [Erik Bryntse, 1991].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Car Race Demo [Erik Bryntse, 1991].ch8"; sourceTree = "<group>"; };
		5631A6EB175804D800FBB5E2 /* Car Race Demo [Erik Bryntse, 1991].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Car Race Demo [Erik Bryntse, 1991].txt"; sourceTree = "<group>"; };
		5631A6EC175804D800FBB5E2 /* Climax Slideshow - Part 1 [Revival Studios, 2008].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Climax Slideshow - Part 1 [Revival Studios, 2008].ch8"; sourceTree = "<group>"; };
		5631A6ED175804D800FBB5E2 /* Climax Slideshow - Part 1 [Revival Studios, 2008].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Climax Slideshow - Part 1 [Revival Studios, 2008].txt"; sourceTree = "<group>"; };
		5631A6EE175804D800FBB5E2 /* Climax Slideshow - Part 2 [Revival Studios, 2008].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Climax Slideshow - Part 2 [Revival Studios, 2008].ch8"; sourceTree = "<group>"; };
		5631A6EF175804D800FBB5E2 /* Climax Slideshow - Part 2 [Revival Studios, 2008].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Climax Slideshow - Part 2 [Revival Studios, 2008].txt"; sourceTree = "<group>"; };
		5631A6F0175804D800FBB5E2 /* Robot.ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = Robot.ch8; sourceTree = "<group>"; };
		5631A6F1175804D800FBB5E2 /* SCSerpinski [Sergey Naydenov, 2010].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "SCSerpinski [Sergey Naydenov, 2010].ch8"; sourceTree = "<group>"; };
		5631A6F2175804D800FBB5E2 /* SCStars  [Sergey Naydenov, 2010].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "SCStars  [Sergey Naydenov, 2010].ch8"; sourceTree = "<group>"; };
		5631A6F3175804D800FBB5E2 /* Super Particle Demo [zeroZshadow, 2008].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Super Particle Demo [zeroZshadow, 2008].ch8"; sourceTree = "<group>"; };
		5631A6F4175804D800FBB5E2 /* Super Particle Demo [zeroZshadow, 2008].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Super Particle Demo [zeroZshadow, 2008].txt"; sourceTree = "<group>"; };
		5631A6F5175804D800FBB5E2 /* SuperMaze [David Winter, 199x].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "SuperMaze [David Winter, 199x].ch8"; sourceTree = "<group>"; };
		5631A6F6175804D800FBB5E2 /* SuperMaze [David Winter, 199x].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "SuperMaze [David Winter, 199x].txt"; sourceTree = "<group>"; };
		5631A6F7175804D800FBB5E2 /* SuperTrip8 Demo (2008) [Revival Studios].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "SuperTrip8 Demo (2008) [Revival Studios].ch8"; sourceTree = "<group>"; };
		5631A6F8175804D800FBB5E2 /* SuperTrip8 Demo (2008) [Revival Studios].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "SuperTrip8 Demo (2008) [Revival Studios].txt"; sourceTree = "<group>"; };
		5631A6F9175804D800FBB5E2 /* Worms demo.ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Worms demo.ch8"; sourceTree = "<group>"; };
		5631A6FB175804D800FBB5E2 /* Alien [Jonas Lindstedt, 1993].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Alien [Jonas Lindstedt, 1993].ch8"; sourceTree = "<group>"; };
		5631A6FC175804D800FBB5E2 /* Alien [Jonas Lindstedt, 1993].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Alien [Jonas Lindstedt, 1993].txt"; sourceTree = "<group>"; };
		5631A6FD175804D800FBB5E2 /* Ant - In Search of Coke [Erin S. Catto].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Ant - In Search of Coke [Erin S. Catto].ch8"; sourceTree = "<group>"; };
		5631A6FE175804D800FBB5E2 /* Blinky [Hans Christian Egeberg, 1991].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Blinky [Hans Christian Egeberg, 1991].ch8"; sourceTree = "<group>"; };
		5631A6FF175804D800FBB5E2 /* Blinky [Hans Christian Egeberg, 1991].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Blinky [Hans Christian Egeberg, 1991].txt"; sourceTree = "<group>"; };
		5631A700175804D800FBB5E2 /* Car [Klaus von Sengbusch, 1994].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Car [Klaus von Sengbusch, 1994].ch8"; sourceTree = "<group>"; };
		5631A701175804D800FBB5E2 /* Car [Klaus von Sengbusch, 1994].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Car [Klaus von Sengbusch, 1994].txt"; sourceTree = "<group>"; };
		5631A702175804D800FBB5E2 /* Field! [Al Roland, 1993] (alt).ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Field! [Al Roland, 1993] (alt).ch8"; sourceTree = "<group>"; };
		5631A703175804D800FBB5E2 /* Field! [Al Roland, 1993].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Field! [Al Roland, 1993].ch8"; sourceTree = "<group>"; };
		5631A704175804D800FBB5E2 /* Field! [Al Roland, 1993].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Field! [Al Roland, 1993].txt"; sourceTree = "<group>"; };
		5631A705175804D800FBB5E2 /* H. Piper [Paul Raines, 1991].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "H. Piper [Paul Raines, 1991].ch8"; sourceTree = "<group>"; };
		5631A706175804D800FBB5E2 /* H. Piper [Paul Raines, 1991].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "H. Piper [Paul Raines, 1991].txt"; sourceTree = "<group>"; };
		5631A707175804D800FBB5E2 /* Joust [Erin S. Catto, 1993].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Joust [Erin S. Catto, 1993].ch8"; sourceTree = "<group>"; };
		5631A708175804D800FBB5E2 /* Joust [Erin S. Catto, 1993].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Joust [Erin S. Catto, 1993].txt"; sourceTree = "<group>"; };
		5631A709175804D800FBB5E2 /* Laser.ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = Laser.ch8; sourceTree = "<group>"; };
		5631A70A175804D800FBB5E2 /* Loopz (with difficulty select) [Hap, 2006].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Loopz (with difficulty select) [Hap, 2006].ch8"; sourceTree = "<group>"; };
		5631A70B175804D800FBB5E2 /* Loopz (with difficulty select) [Hap, 2006].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Loopz (with difficulty select) [Hap, 2006].txt"; sourceTree = "<group>"; };
		5631A70C175804D800FBB5E2 /* Loopz [Andreas Daumann].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Loopz [Andreas Daumann].ch8"; sourceTree = "<group>"; };
		5631A70D175804D800FBB5E2 /* Magic Square [David Winter, 1997].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Magic Square [David Winter, 1997].ch8"; sourceTree = "<group>"; };
		5631A70E175804D800FBB5E2 /* Magic Square [David Winter, 1997].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Magic Square [David Winter, 1997].txt"; sourceTree = "<group>"; };
		5631A70F175804D800FBB5E2 /* Matches.ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = Matches.ch8; sourceTree = "<group>"; };
		5631A710175804D800FBB5E2 /* Mines! - The minehunter [David Winter, 1997].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Mines! - The minehunter [David Winter, 1997].ch8"; sourceTree = "<group>"; };
		5631A711175804D800FBB5E2 /* Single Dragon (Bomber Section) [David Nurser, 1993].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Single Dragon (Bomber Section) [David Nurser, 1993].ch8"; sourceTree = "<group>"; };
		5631A712175804D800FBB5E2 /* Single Dragon (Bomber Section) [David Nurser, 1993].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Single Dragon (Bomber Section) [David Nurser, 1993].txt"; sourceTree = "<group>"; };
		5631A713175804D800FBB5E2 /* Single Dragon (Stages 1-2) [David Nurser, 1993].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Single Dragon (Stages 1-2) [David Nurser, 1993].ch8"; sourceTree = "<group>"; };
		5631A714175804D800FBB5E2 /* Single Dragon (Stages 1-2) [David Nurser, 1993].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Single Dragon (Stages 1-2) [David Nurser, 1993].txt"; sourceTree = "<group>"; };
		5631A715175804D800FBB5E2 /* Sokoban [Hap, 2006] (alt).ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Sokoban [Hap, 2006] (alt).ch8"; sourceTree = "<group>"; };
		5631A716175804D800FBB5E2 /* Sokoban [Hap, 2006].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Sokoban [Hap, 2006].ch8"; sourceTree = "<group>"; };
		5631A717175804D800FBB5E2 /* Sokoban [Hap, 2006].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Sokoban [Hap, 2006].txt"; sourceTree = "<group>"; };
		5631A718175804D800FBB5E2 /* Spacefight 2091 [Carsten Soerensen, 1992].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Spacefight 2091 [Carsten Soerensen, 1992].ch8"; sourceTree = "<group>"; };
		5631A719175804D800FBB5E2 /* Spacefight 2091 [Carsten Soerensen, 1992].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Spacefight 2091 [Carsten Soerensen, 1992].txt"; sourceTree = "<group>"; };
		5631A71A175804D800FBB5E2 /* Super Astro Dodge [Revival Studios, 2008].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Super Astro Dodge [Revival Studios, 2008].ch8"; sourceTree = "<group>"; };
		5631A71B175804D800FBB5E2 /* Super Astro Dodge [Revival Studios, 2008].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Super Astro Dodge [Revival Studios, 2008].txt"; sourceTree = "<group>"; };
		5631A71C175804D800FBB5E2 /* SuperWorm V3 [RB, 1992].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "SuperWorm V3 [RB, 1992].ch8"; sourceTree = "<group>"; };
		5631A71D175804D800FBB5E2 /* SuperWorm V4 [RB-Revival Studios, 2007].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "SuperWorm V4 [RB-Revival Studios, 2007].ch8"; sourceTree = "<group>"; };
		5631A71E175804D800FBB5E2 /* SuperWorm V4 [RB-Revival Studios, 2007].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "SuperWorm V4 [RB-Revival Studios, 2007].txt"; sourceTree = "<group>"; };
		5631A71F175804D800FBB5E2 /* U-Boat [Michael Kemper, 1994].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "U-Boat [Michael Kemper, 1994].ch8"; sourceTree = "<group>"; };
		5631A720175804D800FBB5E2 /* U-Boat [Michael Kemper, 1994].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "U-Boat [Michael Kemper, 1994].txt"; sourceTree = "<group>"; };
		5631A722175804D800FBB5E2 /* BMP Viewer (16x16 tiles) (MAME) [IQ_132].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "BMP Viewer (16x16 tiles) (MAME) [IQ_132].ch8"; sourceTree = "<group>"; };
		5631A723175804D800FBB5E2 /* BMP Viewer (Google) [IQ_132].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "BMP Viewer (Google) [IQ_132].ch8"; sourceTree = "<group>"; };
		5631A724175804D800FBB5E2 /* BMP Viewer - Flip-8 logo [Newsdee, 2006].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "BMP Viewer - Flip-8 logo [Newsdee, 2006].ch8"; sourceTree = "<group>"; };
		5631A725175804D800FBB5E2 /* BMP Viewer - Flip-8 logo [Newsdee, 2006].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "BMP Viewer - Flip-8 logo [Newsdee, 2006].txt"; sourceTree = "<group>"; };
		5631A726175804D800FBB5E2 /* BMP Viewer - Kyori (SC example) [Hap, 2005].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "BMP Viewer - Kyori (SC example) [Hap, 2005].ch8"; sourceTree = "<group>"; };
		5631A727175804D800FBB5E2 /* BMP Viewer - Kyori (SC example) [Hap, 2005].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "BMP Viewer - Kyori (SC example) [Hap, 2005].txt"; sourceTree = "<group>"; };
		5631A728175804D800FBB5E2 /* BMP Viewer - Let's Chip-8! [Koppepan, 2005].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "BMP Viewer - Let's Chip-8! [Koppepan, 2005].ch8"; sourceTree = "<group>"; };
		5631A729175804D800FBB5E2 /* BMP Viewer - Let's Chip-8! [Koppepan, 2005].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "BMP Viewer - Let's Chip-8! [Koppepan, 2005].txt"; sourceTree = "<group>"; };
		5631A72A175804D800FBB5E2 /* Emutest [Hap, 2006].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Emutest [Hap, 2006].ch8"; sourceTree = "<group>"; };
		5631A72B175804D800FBB5E2 /* Emutest [Hap, 2006].txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "Emutest [Hap, 2006].txt"; sourceTree = "<group>"; };
		5631A72C175804D800FBB5E2 /* Font Test [Newsdee, 2006].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Font Test [Newsdee, 2006].ch8"; sourceTree = "<group>"; };
		5631A72D175804D800FBB5E2 /* Hex Mixt.ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Hex Mixt.ch8"; sourceTree = "<group>"; };
		5631A72E175804D800FBB5E2 /* Line Demo.ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Line Demo.ch8"; sourceTree = "<group>"; };
		5631A72F175804D800FBB5E2 /* SC Test.ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "SC Test.ch8"; sourceTree = "<group>"; };
		5631A730175804D800FBB5E2 /* SC Test.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "SC Test.txt"; sourceTree = "<group>"; };
		5631A731175804D800FBB5E2 /* SCHIP Test [iq_132].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "SCHIP Test [iq_132].ch8"; sourceTree = "<group>"; };
		5631A732175804D800FBB5E2 /* Scroll Test (modified) [Garstyciuks].ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Scroll Test (modified) [Garstyciuks].ch8"; sourceTree = "<group>"; };
		5631A733175804D800FBB5E2 /* Scroll Test.ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Scroll Test.ch8"; sourceTree = "<group>"; };
		5631A734175804D800FBB5E2 /* SuperChip Test.ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = "SuperChip Test.ch8"; sourceTree = "<group>"; };
		5631A735175804D800FBB5E2 /* SuperChip Test.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "SuperChip Test.txt"; sourceTree = "<group>"; };
		5631A736175804D800FBB5E2 /* Test128.ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; path = Test128.ch8; sourceTree = "<group>"; };
		56542F0817552FB300BFA0CB /* Opcode.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = Opcode.h; sourceTree = "<group>"; };
		56542F0917552FB300BFA0CB /* Opcode.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = Opcode.m; sourceTree = "<group>"; };
		566A50021752866A00A90940 /* Chip8jnt.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = Chip8jnt.app; sourceTree = BUILT_PRODUCTS_DIR; };
		566A50051752866A00A90940 /* UIKit.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = UIKit.framework; path = System/Library/Frameworks/UIKit.framework; sourceTree = SDKROOT; };
		566A50071752866A00A90940 /* Foundation.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = Foundation.framework; path = System/Library/Frameworks/Foundation.framework; sourceTree = SDKROOT; };
		566A50091752866A00A90940 /* CoreGraphics.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = CoreGraphics.framework; path = System/Library/Frameworks/CoreGraphics.framework; sourceTree = SDKROOT; };
		566A500D1752866A00A90940 /* Chip8jnt-Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = "Chip8jnt-Info.plist"; sourceTree = "<group>"; };
		566A500F1752866A00A90940 /* en */ = {isa = PBXFileReference; lastKnownFileType = text.plist.strings; name = en; path = en.lproj/InfoPlist.strings; sourceTree = "<group>"; };
		566A50111752866A00A90940 /* main.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = main.m; sourceTree = "<group>"; };
		566A50131752866A00A90940 /* Chip8jnt-Prefix.pch */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = "Chip8jnt-Prefix.pch"; sourceTree = "<group>"; };
		566A50141752866A00A90940 /* AppDelegate.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = AppDelegate.h; sourceTree = "<group>"; };
		566A50151752866B00A90940 /* AppDelegate.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = AppDelegate.m; sourceTree = "<group>"; };
		566A50171752866B00A90940 /* Default.png */ = {isa = PBXFileReference; lastKnownFileType = image.png; path = Default.png; sourceTree = "<group>"; };
		566A50191752866B00A90940 /* Default@2x.png */ = {isa = PBXFileReference; lastKnownFileType = image.png; path = "Default@2x.png"; sourceTree = "<group>"; };
		566A501B1752866B00A90940 /* Default-568h@2x.png */ = {isa = PBXFileReference; lastKnownFileType = image.png; path = "Default-568h@2x.png"; sourceTree = "<group>"; };
		566A501D1752866B00A90940 /* ViewController.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = ViewController.h; sourceTree = "<group>"; };
		566A501E1752866B00A90940 /* ViewController.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = ViewController.m; sourceTree = "<group>"; };
		566A50211752866B00A90940 /* en */ = {isa = PBXFileReference; lastKnownFileType = file.xib; name = en; path = en.lproj/ViewController.xib; sourceTree = "<group>"; };
		566A502917529F1000A90940 /* Chip8.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = Chip8.h; sourceTree = "<group>"; };
		566A502A17529F1000A90940 /* Chip8.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = Chip8.m; sourceTree = "<group>"; };
		566A50321752BA2700A90940 /* Chip8jntUtils.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = Chip8jntUtils.h; sourceTree = "<group>"; };
		566A50331752BA2700A90940 /* Chip8jntUtils.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = Chip8jntUtils.m; sourceTree = "<group>"; };
		569351E21754072E00911B2A /* Chip8Canvas.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = Chip8Canvas.h; sourceTree = "<group>"; };
		569351E31754072E00911B2A /* Chip8Canvas.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = Chip8Canvas.m; sourceTree = "<group>"; };
		56A66B271756AA6600FC7760 /* SNAFU.ch8 */ = {isa = PBXFileReference; lastKnownFileType = file; name = SNAFU.ch8; path = roms/SNAFU.ch8; sourceTree = SOURCE_ROOT; };
		56A900D817593AD3002EB134 /* DebugCell.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = DebugCell.h; path = Chip8jnt/DebugCell.h; sourceTree = "<group>"; };
		56A900D917593AD3002EB134 /* DebugCell.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; name = DebugCell.m; path = Chip8jnt/DebugCell.m; sourceTree = "<group>"; };
		56A900DD17593BB6002EB134 /* DebugCell.xib */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = file.xib; path = DebugCell.xib; sourceTree = "<group>"; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		566A4FFF1752866A00A90940 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				566A50061752866A00A90940 /* UIKit.framework in Frameworks */,
				566A50081752866A00A90940 /* Foundation.framework in Frameworks */,
				566A500A1752866A00A90940 /* CoreGraphics.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		5631A610175804D700FBB5E2 /* roms */ = {
			isa = PBXGroup;
			children = (
				5631A611175804D700FBB5E2 /* Chip-8 Pack */,
			);
			path = roms;
			sourceTree = SOURCE_ROOT;
		};
		5631A611175804D700FBB5E2 /* Chip-8 Pack */ = {
			isa = PBXGroup;
			children = (
				5631A612175804D700FBB5E2 /* Chip-8 Demos */,
				5631A620175804D700FBB5E2 /* Chip-8 Games */,
				5631A696175804D700FBB5E2 /* Chip-8 Hires */,
				5631A6A5175804D700FBB5E2 /* Chip-8 Programs */,
				5631A6C0175804D800FBB5E2 /* Chip-8X and Hybrids */,
				5631A6DC175804D800FBB5E2 /* Chip8 Pack - Readme.txt */,
				5631A6DD175804D800FBB5E2 /* Latest Updates.txt */,
				5631A6DE175804D800FBB5E2 /* MegaChip8 Demos */,
				5631A6E7175804D800FBB5E2 /* MegaChip8 Games */,
				5631A6E8175804D800FBB5E2 /* SuperChip Demos */,
				5631A6FA175804D800FBB5E2 /* SuperChip Games */,
				5631A721175804D800FBB5E2 /* SuperChip Test Programs */,
			);
			path = "Chip-8 Pack";
			sourceTree = "<group>";
		};
		5631A612175804D700FBB5E2 /* Chip-8 Demos */ = {
			isa = PBXGroup;
			children = (
				5631A613175804D700FBB5E2 /* Maze (alt) [David Winter, 199x].ch8 */,
				5631A614175804D700FBB5E2 /* Maze (alt) [David Winter, 199x].txt */,
				5631A615175804D700FBB5E2 /* Maze [David Winter, 199x].ch8 */,
				5631A616175804D700FBB5E2 /* Maze [David Winter, 199x].txt */,
				5631A617175804D700FBB5E2 /* Particle Demo [zeroZshadow, 2008].ch8 */,
				5631A618175804D700FBB5E2 /* Particle Demo [zeroZshadow, 2008].txt */,
				5631A619175804D700FBB5E2 /* Sierpinski [Sergey Naydenov, 2010].ch8 */,
				5631A61A175804D700FBB5E2 /* Sirpinski [Sergey Naydenov, 2010].ch8 */,
				5631A61B175804D700FBB5E2 /* Stars [Sergey Naydenov, 2010].ch8 */,
				5631A61C175804D700FBB5E2 /* Trip8 Demo (2008) [Revival Studios].ch8 */,
				5631A61D175804D700FBB5E2 /* Trip8 Demo (2008) [Revival Studios].txt */,
				5631A61E175804D700FBB5E2 /* Zero Demo [zeroZshadow, 2007].ch8 */,
				5631A61F175804D700FBB5E2 /* Zero Demo [zeroZshadow, 2007].txt */,
			);
			path = "Chip-8 Demos";
			sourceTree = "<group>";
		};
		5631A620175804D700FBB5E2 /* Chip-8 Games */ = {
			isa = PBXGroup;
			children = (
				5631A621175804D700FBB5E2 /* 15 Puzzle [Roger Ivie] (alt).ch8 */,
				5631A622175804D700FBB5E2 /* 15 Puzzle [Roger Ivie].ch8 */,
				5631A623175804D700FBB5E2 /* 15 Puzzle [Roger Ivie].txt */,
				5631A624175804D700FBB5E2 /* Addition Problems [Paul C. Moews].ch8 */,
				5631A625175804D700FBB5E2 /* Airplane.ch8 */,
				5631A626175804D700FBB5E2 /* Animal Race [Brian Astle].ch8 */,
				5631A627175804D700FBB5E2 /* Animal Race [Brian Astle].txt */,
				5631A628175804D700FBB5E2 /* Astro Dodge [Revival Studios, 2008].ch8 */,
				5631A629175804D700FBB5E2 /* Astro Dodge [Revival Studios, 2008].txt */,
				5631A62A175804D700FBB5E2 /* Biorhythm [Jef Winsor].ch8 */,
				5631A62B175804D700FBB5E2 /* Biorhythm [Jef Winsor].txt */,
				5631A62C175804D700FBB5E2 /* Blinky [Hans Christian Egeberg, 1991].ch8 */,
				5631A62D175804D700FBB5E2 /* Blinky [Hans Christian Egeberg] (alt).ch8 */,
				5631A62E175804D700FBB5E2 /* Blitz [David Winter].ch8 */,
				5631A62F175804D700FBB5E2 /* Blitz [David Winter].txt */,
				5631A630175804D700FBB5E2 /* Bowling [Gooitzen van der Wal].ch8 */,
				5631A631175804D700FBB5E2 /* Bowling [Gooitzen van der Wal].txt */,
				5631A632175804D700FBB5E2 /* Breakout (Brix hack) [David Winter, 1997].ch8 */,
				5631A633175804D700FBB5E2 /* Breakout (Brix hack) [David Winter, 1997].txt */,
				5631A634175804D700FBB5E2 /* Breakout [Carmelo Cortez, 1979].ch8 */,
				5631A635175804D700FBB5E2 /* Breakout [Carmelo Cortez, 1979].txt */,
				5631A636175804D700FBB5E2 /* Brick (Brix hack, 1990).ch8 */,
				5631A637175804D700FBB5E2 /* Brick (Brix hack, 1990).txt */,
				5631A638175804D700FBB5E2 /* Brix [Andreas Gustafsson, 1990].ch8 */,
				5631A639175804D700FBB5E2 /* Cave.ch8 */,
				5631A63A175804D700FBB5E2 /* Coin Flipping [Carmelo Cortez, 1978].ch8 */,
				5631A63B175804D700FBB5E2 /* Coin Flipping [Carmelo Cortez, 1978].txt */,
				5631A63C175804D700FBB5E2 /* Connect 4 [David Winter].ch8 */,
				5631A63D175804D700FBB5E2 /* Connect 4 [David Winter].txt */,
				5631A63E175804D700FBB5E2 /* Craps [Camerlo Cortez, 1978].ch8 */,
				5631A63F175804D700FBB5E2 /* Craps [Camerlo Cortez, 1978].txt */,
				5631A640175804D700FBB5E2 /* Deflection [John Fort].ch8 */,
				5631A641175804D700FBB5E2 /* Deflection [John Fort].txt */,
				5631A642175804D700FBB5E2 /* Figures.ch8 */,
				5631A643175804D700FBB5E2 /* Filter.ch8 */,
				5631A644175804D700FBB5E2 /* Guess [David Winter] (alt).ch8 */,
				5631A645175804D700FBB5E2 /* Guess [David Winter] (alt).txt */,
				5631A646175804D700FBB5E2 /* Guess [David Winter].ch8 */,
				5631A647175804D700FBB5E2 /* Guess [David Winter].txt */,
				5631A648175804D700FBB5E2 /* Hi-Lo [Jef Winsor, 1978].ch8 */,
				5631A649175804D700FBB5E2 /* Hi-Lo [Jef Winsor, 1978].txt */,
				5631A64A175804D700FBB5E2 /* Hidden [David Winter, 1996].ch8 */,
				5631A64B175804D700FBB5E2 /* Hidden [David Winter, 1996].txt */,
				5631A64C175804D700FBB5E2 /* Kaleidoscope [Joseph Weisbecker, 1978].ch8 */,
				5631A64D175804D700FBB5E2 /* Kaleidoscope [Joseph Weisbecker, 1978].txt */,
				5631A64E175804D700FBB5E2 /* Landing.ch8 */,
				5631A64F175804D700FBB5E2 /* Lunar Lander (Udo Pernisz, 1979).ch8 */,
				5631A650175804D700FBB5E2 /* Lunar Lander [Udo Pernisz, 1979].txt */,
				5631A651175804D700FBB5E2 /* Mastermind FourRow (Robert Lindley, 1978).ch8 */,
				5631A652175804D700FBB5E2 /* Mastermind FourRow (Robert Lindley, 1978).txt */,
				5631A653175804D700FBB5E2 /* Merlin [David Winter].ch8 */,
				5631A654175804D700FBB5E2 /* Merlin [David Winter].txt */,
				5631A655175804D700FBB5E2 /* Missile [David Winter].ch8 */,
				5631A656175804D700FBB5E2 /* Most Dangerous Game [Peter Maruhnic].ch8 */,
				5631A657175804D700FBB5E2 /* Most Dangerous Game [Peter Maruhnic].txt */,
				5631A658175804D700FBB5E2 /* Nim [Carmelo Cortez, 1978].ch8 */,
				5631A659175804D700FBB5E2 /* Nim [Carmelo Cortez, 1978].txt */,
				5631A65A175804D700FBB5E2 /* Paddles.ch8 */,
				5631A65B175804D700FBB5E2 /* Pong (1 player).ch8 */,
				5631A65C175804D700FBB5E2 /* Pong (alt).ch8 */,
				5631A65D175804D700FBB5E2 /* Pong 2 (Pong hack) [David Winter, 1997].ch8 */,
				5631A65E175804D700FBB5E2 /* Pong [Paul Vervalin, 1990].ch8 */,
				5631A65F175804D700FBB5E2 /* Pong [Paul Vervalin, 1990].txt */,
				5631A660175804D700FBB5E2 /* Programmable Spacefighters [Jef Winsor].ch8 */,
				5631A661175804D700FBB5E2 /* Programmable Spacefighters [Jef Winsor].txt */,
				5631A662175804D700FBB5E2 /* Puzzle.ch8 */,
				5631A663175804D700FBB5E2 /* Reversi [Philip Baltzer].ch8 */,
				5631A664175804D700FBB5E2 /* Reversi [Philip Baltzer].txt */,
				5631A665175804D700FBB5E2 /* Rocket [Joseph Weisbecker, 1978].ch8 */,
				5631A666175804D700FBB5E2 /* Rocket Launch [Jonas Lindstedt].ch8 */,
				5631A667175804D700FBB5E2 /* Rocket Launcher.ch8 */,
				5631A668175804D700FBB5E2 /* Rush Hour [Hap, 2006] (alt).ch8 */,
				5631A669175804D700FBB5E2 /* Rush Hour [Hap, 2006].ch8 */,
				5631A66A175804D700FBB5E2 /* Rush Hour [Hap, 2006].txt */,
				5631A66B175804D700FBB5E2 /* Russian Roulette [Carmelo Cortez, 1978].ch8 */,
				5631A66C175804D700FBB5E2 /* Russian Roulette [Carmelo Cortez, 1978].txt */,
				5631A66D175804D700FBB5E2 /* Sequence Shoot [Joyce Weisbecker].ch8 */,
				5631A66E175804D700FBB5E2 /* Sequence Shoot [Joyce Weisbecker].txt */,
				5631A66F175804D700FBB5E2 /* Shooting Stars [Philip Baltzer, 1978].ch8 */,
				5631A670175804D700FBB5E2 /* Shooting Stars [Philip Baltzer, 1978].txt */,
				5631A671175804D700FBB5E2 /* Slide [Joyce Weisbecker].ch8 */,
				5631A672175804D700FBB5E2 /* Slide [Joyce Weisbecker].txt */,
				5631A673175804D700FBB5E2 /* Soccer.ch8 */,
				5631A674175804D700FBB5E2 /* Space Flight.ch8 */,
				5631A675175804D700FBB5E2 /* Space Intercept [Joseph Weisbecker, 1978].ch8 */,
				5631A676175804D700FBB5E2 /* Space Intercept [Joseph Weisbecker, 1978].txt */,
				5631A677175804D700FBB5E2 /* Space Invaders [David Winter] (alt).ch8 */,
				5631A678175804D700FBB5E2 /* Space Invaders [David Winter] (alt).txt */,
				5631A679175804D700FBB5E2 /* Space Invaders [David Winter].ch8 */,
				5631A67A175804D700FBB5E2 /* Space Invaders [David Winter].txt */,
				5631A67B175804D700FBB5E2 /* Spooky Spot [Joseph Weisbecker, 1978].ch8 */,
				5631A67C175804D700FBB5E2 /* Spooky Spot [Joseph Weisbecker, 1978].txt */,
				5631A67D175804D700FBB5E2 /* Squash [David Winter].ch8 */,
				5631A67E175804D700FBB5E2 /* Submarine [Carmelo Cortez, 1978].ch8 */,
				5631A67F175804D700FBB5E2 /* Submarine [Carmelo Cortez, 1978].txt */,
				5631A680175804D700FBB5E2 /* Sum Fun [Joyce Weisbecker].ch8 */,
				5631A681175804D700FBB5E2 /* Sum Fun [Joyce Weisbecker].txt */,
				5631A682175804D700FBB5E2 /* Syzygy [Roy Trevino, 1990].ch8 */,
				5631A683175804D700FBB5E2 /* Syzygy [Roy Trevino, 1990].txt */,
				5631A684175804D700FBB5E2 /* Tank.ch8 */,
				5631A685175804D700FBB5E2 /* Tank.txt */,
				5631A686175804D700FBB5E2 /* Tapeworm [JDR, 1999].ch8 */,
				5631A687175804D700FBB5E2 /* Tetris [Fran Dachille, 1991].ch8 */,
				5631A688175804D700FBB5E2 /* Tetris [Fran Dachille, 1991].txt */,
				5631A689175804D700FBB5E2 /* Tic-Tac-Toe [David Winter].ch8 */,
				5631A68A175804D700FBB5E2 /* Timebomb.ch8 */,
				5631A68B175804D700FBB5E2 /* Tron.ch8 */,
				5631A68C175804D700FBB5E2 /* UFO [Lutz V, 1992].ch8 */,
				5631A68D175804D700FBB5E2 /* UFO [Lutz V, 1992].txt */,
				5631A68E175804D700FBB5E2 /* Vers [JMN, 1991].ch8 */,
				5631A68F175804D700FBB5E2 /* Vertical Brix [Paul Robson, 1996].ch8 */,
				5631A690175804D700FBB5E2 /* Wall [David Winter].ch8 */,
				5631A691175804D700FBB5E2 /* Wipe Off [Joseph Weisbecker].ch8 */,
				5631A692175804D700FBB5E2 /* Worm V4 [RB-Revival Studios, 2007].ch8 */,
				5631A693175804D700FBB5E2 /* Worm V4 [RB-Revival Studios, 2007].txt */,
				5631A694175804D700FBB5E2 /* X-Mirror.ch8 */,
				5631A695175804D700FBB5E2 /* ZeroPong [zeroZshadow, 2007].ch8 */,
			);
			path = "Chip-8 Games";
			sourceTree = "<group>";
		};
		5631A696175804D700FBB5E2 /* Chip-8 Hires */ = {
			isa = PBXGroup;
			children = (
				5631A697175804D700FBB5E2 /* !hires_information.txt */,
				5631A698175804D700FBB5E2 /* Astro Dodge Hires [Revival Studios, 2008].ch8 */,
				5631A699175804D700FBB5E2 /* Astro Dodge Hires [Revival Studios, 2008].txt */,
				5631A69A175804D700FBB5E2 /* Hires Maze [David Winter, 199x].ch8 */,
				5631A69B175804D700FBB5E2 /* Hires Maze [David Winter, 199x].txt */,
				5631A69C175804D700FBB5E2 /* Hires Particle Demo [zeroZshadow, 2008].ch8 */,
				5631A69D175804D700FBB5E2 /* Hires Particle Demo [zeroZshadow, 2008].txt */,
				5631A69E175804D700FBB5E2 /* Hires Sierpinski [Sergey Naydenov, 2010].ch8 */,
				5631A69F175804D700FBB5E2 /* Hires Stars [Sergey Naydenov, 2010].ch8 */,
				5631A6A0175804D700FBB5E2 /* Hires Test [Tom Swan, 1979].ch8 */,
				5631A6A1175804D700FBB5E2 /* Hires Worm V4 [RB-Revival Studios, 2007].ch8 */,
				5631A6A2175804D700FBB5E2 /* Hires Worm V4 [RB-Revival Studios, 2007].txt */,
				5631A6A3175804D700FBB5E2 /* Trip8 Hires Demo (2008) [Revival Studios].ch8 */,
				5631A6A4175804D700FBB5E2 /* Trip8 Hires Demo (2008) [Revival Studios].txt */,
			);
			path = "Chip-8 Hires";
			sourceTree = "<group>";
		};
		5631A6A5175804D700FBB5E2 /* Chip-8 Programs */ = {
			isa = PBXGroup;
			children = (
				5631A6A6175804D700FBB5E2 /* BMP Viewer - Hello (C8 example) [Hap, 2005].ch8 */,
				5631A6A7175804D700FBB5E2 /* BMP Viewer - Hello (C8 example) [Hap, 2005].txt */,
				5631A6A8175804D700FBB5E2 /* Chip8 emulator Logo [Garstyciuks].ch8 */,
				5631A6A9175804D700FBB5E2 /* Chip8 Picture.ch8 */,
				5631A6AA175804D700FBB5E2 /* Clock Program [Bill Fisher, 1981].ch8 */,
				5631A6AB175804D700FBB5E2 /* Clock Program [Bill Fisher, 1981].txt */,
				5631A6AC175804D700FBB5E2 /* Delay Timer Test [Matthew Mikolay, 2010].ch8 */,
				5631A6AD175804D700FBB5E2 /* Delay Timer Test [Matthew Mikolay, 2010].txt */,
				5631A6AE175804D700FBB5E2 /* Division Test [Sergey Naydenov, 2010].ch8 */,
				5631A6AF175804D700FBB5E2 /* Fishie [Hap, 2005].ch8 */,
				5631A6B0175804D700FBB5E2 /* Fishie [Hap, 2005].txt */,
				5631A6B1175804D700FBB5E2 /* Framed MK1 [GV Samways, 1980].ch8 */,
				5631A6B2175804D700FBB5E2 /* Framed MK1 [GV Samways, 1980].txt */,
				5631A6B3175804D700FBB5E2 /* Framed MK2 [GV Samways, 1980].ch8 */,
				5631A6B4175804D700FBB5E2 /* Framed MK2 [GV Samways, 1980].txt */,
				5631A6B5175804D700FBB5E2 /* IBM Logo.ch8 */,
				5631A6B6175804D700FBB5E2 /* Jumping X and O [Harry Kleinberg, 1977].ch8 */,
				5631A6B7175804D700FBB5E2 /* Jumping X and O [Harry Kleinberg, 1977].txt */,
				5631A6B8175804D700FBB5E2 /* Keypad Test [Hap, 2006].ch8 */,
				5631A6B9175804D700FBB5E2 /* Keypad Test [Hap, 2006].txt */,
				5631A6BA175804D700FBB5E2 /* Life [GV Samways, 1980].ch8 */,
				5631A6BB175804D800FBB5E2 /* Life [GV Samways, 1980].txt */,
				5631A6BC175804D800FBB5E2 /* Minimal game [Revival Studios, 2007].ch8 */,
				5631A6BD175804D800FBB5E2 /* Random Number Test [Matthew Mikolay, 2010].ch8 */,
				5631A6BE175804D800FBB5E2 /* Random Number Test [Matthew Mikolay, 2010].txt */,
				5631A6BF175804D800FBB5E2 /* SQRT Test [Sergey Naydenov, 2010].ch8 */,
			);
			path = "Chip-8 Programs";
			sourceTree = "<group>";
		};
		5631A6C0175804D800FBB5E2 /* Chip-8X and Hybrids */ = {
			isa = PBXGroup;
			children = (
				5631A6C1175804D800FBB5E2 /* Blockout [Steve Houk].c8x */,
				5631A6C2175804D800FBB5E2 /* Blockout [Steve Houk].txt */,
				5631A6C3175804D800FBB5E2 /* Color Kaleidoscope [Steve Houk, 1978].c8x */,
				5631A6C4175804D800FBB5E2 /* Color Kaleidoscope [Steve Houk, 1978].txt */,
				5631A6C5175804D800FBB5E2 /* ColourTest.c8x */,
				5631A6C6175804D800FBB5E2 /* ETI660 Hybrids */,
				5631A6CF175804D800FBB5E2 /* Hybrids */,
				5631A6D9175804D800FBB5E2 /* Pinball [Andrew Modla].ch8 */,
				5631A6DA175804D800FBB5E2 /* Pinball [Andrew Modla].txt */,
				5631A6DB175804D800FBB5E2 /* SoundTest.c8x */,
			);
			path = "Chip-8X and Hybrids";
			sourceTree = "<group>";
		};
		5631A6C6175804D800FBB5E2 /* ETI660 Hybrids */ = {
			isa = PBXGroup;
			children = (
				5631A6C7175804D800FBB5E2 /* Maze 2 (ETI660 Hybrid).ch8 */,
				5631A6C8175804D800FBB5E2 /* Music Maker (ETI660 Hybrid) [Peter Collins, 198x].ch8 */,
				5631A6C9175804D800FBB5E2 /* Music Maker (ETI660 Hybrid) [Peter Collins, 198x].txt */,
				5631A6CA175804D800FBB5E2 /* Pong (ETI660 Hybrid).ch8 */,
				5631A6CB175804D800FBB5E2 /* Space Invaders (ETI660 Hybrid) [P. Easdown,198x].ch8 */,
				5631A6CC175804D800FBB5E2 /* Space Invaders (ETI660 Hybrid) [P. Easdown,198x].txt */,
				5631A6CD175804D800FBB5E2 /* Wipeout (ETI660 hybrid) [W.F. Kreykes, 1982].ch8 */,
				5631A6CE175804D800FBB5E2 /* Wipeout (ETI660 hybrid) [W.F. Kreykes, 1982].txt */,
			);
			path = "ETI660 Hybrids";
			sourceTree = "<group>";
		};
		5631A6CF175804D800FBB5E2 /* Hybrids */ = {
			isa = PBXGroup;
			children = (
				5631A6D0175804D800FBB5E2 /* Bingo [Andrew Modla] (hybrid).ch8 */,
				5631A6D1175804D800FBB5E2 /* Bingo [Andrew Modla] (hybrid).txt */,
				5631A6D2175804D800FBB5E2 /* Blackjack [Andrew Modla] (hybrid).ch8 */,
				5631A6D3175804D800FBB5E2 /* Blackjack [Andrew Modla] (hybrid).txt */,
				5631A6D4175804D800FBB5E2 /* Boot-128 (hybrid).ch8 */,
				5631A6D5175804D800FBB5E2 /* Message Center [Andrew Modla] (hybrid).ch8 */,
				5631A6D6175804D800FBB5E2 /* Message Center [Andrew Modla] (hybrid).txt */,
				5631A6D7175804D800FBB5E2 /* Video Display Drawing Game [Joseph Weisbecker] (hybrid).ch8 */,
				5631A6D8175804D800FBB5E2 /* Video Display Drawing Game [Joseph Weisbecker] (hybrid).txt */,
			);
			path = Hybrids;
			sourceTree = "<group>";
		};
		5631A6DE175804D800FBB5E2 /* MegaChip8 Demos */ = {
			isa = PBXGroup;
			children = (
				5631A6DF175804D800FBB5E2 /* Mega Minimal [Revival Studios, 2007].ch8 */,
				5631A6E0175804D800FBB5E2 /* Mega Particle Demo [zeroZshadow, 2008].ch8 */,
				5631A6E1175804D800FBB5E2 /* Mega Particle Demo [zeroZshadow, 2008].txt */,
				5631A6E2175804D800FBB5E2 /* MegaMaze [David Winter, 2007].ch8 */,
				5631A6E3175804D800FBB5E2 /* MegaMaze [David Winter, 2007].txt */,
				5631A6E4175804D800FBB5E2 /* MegaSirpinski [Sergey Naydenov, 2010].ch8 */,
				5631A6E5175804D800FBB5E2 /* Twister Demo [Revival Studios, 2007].ch8 */,
				5631A6E6175804D800FBB5E2 /* Twister Demo [Revival Studios, 2007].txt */,
			);
			path = "MegaChip8 Demos";
			sourceTree = "<group>";
		};
		5631A6E7175804D800FBB5E2 /* MegaChip8 Games */ = {
			isa = PBXGroup;
			children = (
			);
			path = "MegaChip8 Games";
			sourceTree = "<group>";
		};
		5631A6E8175804D800FBB5E2 /* SuperChip Demos */ = {
			isa = PBXGroup;
			children = (
				5631A6E9175804D800FBB5E2 /* Bounce [Les Harris].ch8 */,
				5631A6EA175804D800FBB5E2 /* Car Race Demo [Erik Bryntse, 1991].ch8 */,
				5631A6EB175804D800FBB5E2 /* Car Race Demo [Erik Bryntse, 1991].txt */,
				5631A6EC175804D800FBB5E2 /* Climax Slideshow - Part 1 [Revival Studios, 2008].ch8 */,
				5631A6ED175804D800FBB5E2 /* Climax Slideshow - Part 1 [Revival Studios, 2008].txt */,
				5631A6EE175804D800FBB5E2 /* Climax Slideshow - Part 2 [Revival Studios, 2008].ch8 */,
				5631A6EF175804D800FBB5E2 /* Climax Slideshow - Part 2 [Revival Studios, 2008].txt */,
				5631A6F0175804D800FBB5E2 /* Robot.ch8 */,
				5631A6F1175804D800FBB5E2 /* SCSerpinski [Sergey Naydenov, 2010].ch8 */,
				5631A6F2175804D800FBB5E2 /* SCStars  [Sergey Naydenov, 2010].ch8 */,
				5631A6F3175804D800FBB5E2 /* Super Particle Demo [zeroZshadow, 2008].ch8 */,
				5631A6F4175804D800FBB5E2 /* Super Particle Demo [zeroZshadow, 2008].txt */,
				5631A6F5175804D800FBB5E2 /* SuperMaze [David Winter, 199x].ch8 */,
				5631A6F6175804D800FBB5E2 /* SuperMaze [David Winter, 199x].txt */,
				5631A6F7175804D800FBB5E2 /* SuperTrip8 Demo (2008) [Revival Studios].ch8 */,
				5631A6F8175804D800FBB5E2 /* SuperTrip8 Demo (2008) [Revival Studios].txt */,
				5631A6F9175804D800FBB5E2 /* Worms demo.ch8 */,
			);
			path = "SuperChip Demos";
			sourceTree = "<group>";
		};
		5631A6FA175804D800FBB5E2 /* SuperChip Games */ = {
			isa = PBXGroup;
			children = (
				5631A6FB175804D800FBB5E2 /* Alien [Jonas Lindstedt, 1993].ch8 */,
				5631A6FC175804D800FBB5E2 /* Alien [Jonas Lindstedt, 1993].txt */,
				5631A6FD175804D800FBB5E2 /* Ant - In Search of Coke [Erin S. Catto].ch8 */,
				5631A6FE175804D800FBB5E2 /* Blinky [Hans Christian Egeberg, 1991].ch8 */,
				5631A6FF175804D800FBB5E2 /* Blinky [Hans Christian Egeberg, 1991].txt */,
				5631A700175804D800FBB5E2 /* Car [Klaus von Sengbusch, 1994].ch8 */,
				5631A701175804D800FBB5E2 /* Car [Klaus von Sengbusch, 1994].txt */,
				5631A702175804D800FBB5E2 /* Field! [Al Roland, 1993] (alt).ch8 */,
				5631A703175804D800FBB5E2 /* Field! [Al Roland, 1993].ch8 */,
				5631A704175804D800FBB5E2 /* Field! [Al Roland, 1993].txt */,
				5631A705175804D800FBB5E2 /* H. Piper [Paul Raines, 1991].ch8 */,
				5631A706175804D800FBB5E2 /* H. Piper [Paul Raines, 1991].txt */,
				5631A707175804D800FBB5E2 /* Joust [Erin S. Catto, 1993].ch8 */,
				5631A708175804D800FBB5E2 /* Joust [Erin S. Catto, 1993].txt */,
				5631A709175804D800FBB5E2 /* Laser.ch8 */,
				5631A70A175804D800FBB5E2 /* Loopz (with difficulty select) [Hap, 2006].ch8 */,
				5631A70B175804D800FBB5E2 /* Loopz (with difficulty select) [Hap, 2006].txt */,
				5631A70C175804D800FBB5E2 /* Loopz [Andreas Daumann].ch8 */,
				5631A70D175804D800FBB5E2 /* Magic Square [David Winter, 1997].ch8 */,
				5631A70E175804D800FBB5E2 /* Magic Square [David Winter, 1997].txt */,
				5631A70F175804D800FBB5E2 /* Matches.ch8 */,
				5631A710175804D800FBB5E2 /* Mines! - The minehunter [David Winter, 1997].ch8 */,
				5631A711175804D800FBB5E2 /* Single Dragon (Bomber Section) [David Nurser, 1993].ch8 */,
				5631A712175804D800FBB5E2 /* Single Dragon (Bomber Section) [David Nurser, 1993].txt */,
				5631A713175804D800FBB5E2 /* Single Dragon (Stages 1-2) [David Nurser, 1993].ch8 */,
				5631A714175804D800FBB5E2 /* Single Dragon (Stages 1-2) [David Nurser, 1993].txt */,
				5631A715175804D800FBB5E2 /* Sokoban [Hap, 2006] (alt).ch8 */,
				5631A716175804D800FBB5E2 /* Sokoban [Hap, 2006].ch8 */,
				5631A717175804D800FBB5E2 /* Sokoban [Hap, 2006].txt */,
				5631A718175804D800FBB5E2 /* Spacefight 2091 [Carsten Soerensen, 1992].ch8 */,
				5631A719175804D800FBB5E2 /* Spacefight 2091 [Carsten Soerensen, 1992].txt */,
				5631A71A175804D800FBB5E2 /* Super Astro Dodge [Revival Studios, 2008].ch8 */,
				5631A71B175804D800FBB5E2 /* Super Astro Dodge [Revival Studios, 2008].txt */,
				5631A71C175804D800FBB5E2 /* SuperWorm V3 [RB, 1992].ch8 */,
				5631A71D175804D800FBB5E2 /* SuperWorm V4 [RB-Revival Studios, 2007].ch8 */,
				5631A71E175804D800FBB5E2 /* SuperWorm V4 [RB-Revival Studios, 2007].txt */,
				5631A71F175804D800FBB5E2 /* U-Boat [Michael Kemper, 1994].ch8 */,
				5631A720175804D800FBB5E2 /* U-Boat [Michael Kemper, 1994].txt */,
			);
			path = "SuperChip Games";
			sourceTree = "<group>";
		};
		5631A721175804D800FBB5E2 /* SuperChip Test Programs */ = {
			isa = PBXGroup;
			children = (
				5631A722175804D800FBB5E2 /* BMP Viewer (16x16 tiles) (MAME) [IQ_132].ch8 */,
				5631A723175804D800FBB5E2 /* BMP Viewer (Google) [IQ_132].ch8 */,
				5631A724175804D800FBB5E2 /* BMP Viewer - Flip-8 logo [Newsdee, 2006].ch8 */,
				5631A725175804D800FBB5E2 /* BMP Viewer - Flip-8 logo [Newsdee, 2006].txt */,
				5631A726175804D800FBB5E2 /* BMP Viewer - Kyori (SC example) [Hap, 2005].ch8 */,
				5631A727175804D800FBB5E2 /* BMP Viewer - Kyori (SC example) [Hap, 2005].txt */,
				5631A728175804D800FBB5E2 /* BMP Viewer - Let's Chip-8! [Koppepan, 2005].ch8 */,
				5631A729175804D800FBB5E2 /* BMP Viewer - Let's Chip-8! [Koppepan, 2005].txt */,
				5631A72A175804D800FBB5E2 /* Emutest [Hap, 2006].ch8 */,
				5631A72B175804D800FBB5E2 /* Emutest [Hap, 2006].txt */,
				5631A72C175804D800FBB5E2 /* Font Test [Newsdee, 2006].ch8 */,
				5631A72D175804D800FBB5E2 /* Hex Mixt.ch8 */,
				5631A72E175804D800FBB5E2 /* Line Demo.ch8 */,
				5631A72F175804D800FBB5E2 /* SC Test.ch8 */,
				5631A730175804D800FBB5E2 /* SC Test.txt */,
				5631A731175804D800FBB5E2 /* SCHIP Test [iq_132].ch8 */,
				5631A732175804D800FBB5E2 /* Scroll Test (modified) [Garstyciuks].ch8 */,
				5631A733175804D800FBB5E2 /* Scroll Test.ch8 */,
				5631A734175804D800FBB5E2 /* SuperChip Test.ch8 */,
				5631A735175804D800FBB5E2 /* SuperChip Test.txt */,
				5631A736175804D800FBB5E2 /* Test128.ch8 */,
			);
			path = "SuperChip Test Programs";
			sourceTree = "<group>";
		};
		566A4FF91752866A00A90940 = {
			isa = PBXGroup;
			children = (
				566A500B1752866A00A90940 /* Chip8jnt */,
				566A50041752866A00A90940 /* Frameworks */,
				566A50031752866A00A90940 /* Products */,
			);
			sourceTree = "<group>";
		};
		566A50031752866A00A90940 /* Products */ = {
			isa = PBXGroup;
			children = (
				566A50021752866A00A90940 /* Chip8jnt.app */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		566A50041752866A00A90940 /* Frameworks */ = {
			isa = PBXGroup;
			children = (
				566A50051752866A00A90940 /* UIKit.framework */,
				566A50071752866A00A90940 /* Foundation.framework */,
				566A50091752866A00A90940 /* CoreGraphics.framework */,
			);
			name = Frameworks;
			sourceTree = "<group>";
		};
		566A500B1752866A00A90940 /* Chip8jnt */ = {
			isa = PBXGroup;
			children = (
				56A900D717593A6D002EB134 /* DEBIG */,
				569351E1175406F900911B2A /* VIDEO */,
				566A50311752B9D900A90940 /* UTIL */,
				566A502817529EE900A90940 /* CPU */,
				566A50141752866A00A90940 /* AppDelegate.h */,
				566A50151752866B00A90940 /* AppDelegate.m */,
				566A501D1752866B00A90940 /* ViewController.h */,
				566A501E1752866B00A90940 /* ViewController.m */,
				566A50201752866B00A90940 /* ViewController.xib */,
				566A500C1752866A00A90940 /* Supporting Files */,
			);
			path = Chip8jnt;
			sourceTree = "<group>";
		};
		566A500C1752866A00A90940 /* Supporting Files */ = {
			isa = PBXGroup;
			children = (
				5631A610175804D700FBB5E2 /* roms */,
				566A500D1752866A00A90940 /* Chip8jnt-Info.plist */,
				56A66B271756AA6600FC7760 /* SNAFU.ch8 */,
				566A500E1752866A00A90940 /* InfoPlist.strings */,
				566A50111752866A00A90940 /* main.m */,
				566A50131752866A00A90940 /* Chip8jnt-Prefix.pch */,
				566A50171752866B00A90940 /* Default.png */,
				566A50191752866B00A90940 /* Default@2x.png */,
				566A501B1752866B00A90940 /* Default-568h@2x.png */,
			);
			name = "Supporting Files";
			sourceTree = "<group>";
		};
		566A502817529EE900A90940 /* CPU */ = {
			isa = PBXGroup;
			children = (
				566A502917529F1000A90940 /* Chip8.h */,
				566A502A17529F1000A90940 /* Chip8.m */,
				56542F0817552FB300BFA0CB /* Opcode.h */,
				56542F0917552FB300BFA0CB /* Opcode.m */,
			);
			name = CPU;
			sourceTree = "<group>";
		};
		566A50311752B9D900A90940 /* UTIL */ = {
			isa = PBXGroup;
			children = (
				566A50321752BA2700A90940 /* Chip8jntUtils.h */,
				566A50331752BA2700A90940 /* Chip8jntUtils.m */,
			);
			name = UTIL;
			sourceTree = "<group>";
		};
		569351E1175406F900911B2A /* VIDEO */ = {
			isa = PBXGroup;
			children = (
				569351E21754072E00911B2A /* Chip8Canvas.h */,
				569351E31754072E00911B2A /* Chip8Canvas.m */,
			);
			name = VIDEO;
			sourceTree = "<group>";
		};
		56A900D717593A6D002EB134 /* DEBIG */ = {
			isa = PBXGroup;
			children = (
				56A900D817593AD3002EB134 /* DebugCell.h */,
				56A900D917593AD3002EB134 /* DebugCell.m */,
				56A900DD17593BB6002EB134 /* DebugCell.xib */,
			);
			name = DEBIG;
			path = ..;
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		566A50011752866A00A90940 /* Chip8jnt */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 566A50251752866B00A90940 /* Build configuration list for PBXNativeTarget "Chip8jnt" */;
			buildPhases = (
				566A4FFE1752866A00A90940 /* Sources */,
				566A4FFF1752866A00A90940 /* Frameworks */,
				566A50001752866A00A90940 /* Resources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = Chip8jnt;
			productName = Chip8jnt;
			productReference = 566A50021752866A00A90940 /* Chip8jnt.app */;
			productType = "com.apple.product-type.application";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		566A4FFA1752866A00A90940 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastUpgradeCheck = 0460;
				ORGANIZATIONNAME = "Jonathan da Silva Santos";
			};
			buildConfigurationList = 566A4FFD1752866A00A90940 /* Build configuration list for PBXProject "Chip8jnt" */;
			compatibilityVersion = "Xcode 3.2";
			developmentRegion = English;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
			);
			mainGroup = 566A4FF91752866A00A90940;
			productRefGroup = 566A50031752866A00A90940 /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				566A50011752866A00A90940 /* Chip8jnt */,
			);
		};
/* End PBXProject section */

/* Begin PBXResourcesBuildPhase section */
		566A50001752866A00A90940 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				566A50101752866A00A90940 /* InfoPlist.strings in Resources */,
				566A50181752866B00A90940 /* Default.png in Resources */,
				566A501A1752866B00A90940 /* Default@2x.png in Resources */,
				566A501C1752866B00A90940 /* Default-568h@2x.png in Resources */,
				566A50221752866B00A90940 /* ViewController.xib in Resources */,
				5631A737175804D800FBB5E2 /* Maze (alt) [David Winter, 199x].ch8 in Resources */,
				5631A738175804D800FBB5E2 /* Maze (alt) [David Winter, 199x].txt in Resources */,
				5631A739175804D800FBB5E2 /* Maze [David Winter, 199x].ch8 in Resources */,
				5631A73A175804D800FBB5E2 /* Maze [David Winter, 199x].txt in Resources */,
				5631A73B175804D800FBB5E2 /* Particle Demo [zeroZshadow, 2008].ch8 in Resources */,
				5631A73C175804D800FBB5E2 /* Particle Demo [zeroZshadow, 2008].txt in Resources */,
				5631A73D175804D800FBB5E2 /* Sierpinski [Sergey Naydenov, 2010].ch8 in Resources */,
				5631A73E175804D800FBB5E2 /* Sirpinski [Sergey Naydenov, 2010].ch8 in Resources */,
				5631A73F175804D800FBB5E2 /* Stars [Sergey Naydenov, 2010].ch8 in Resources */,
				5631A740175804D800FBB5E2 /* Trip8 Demo (2008) [Revival Studios].ch8 in Resources */,
				5631A741175804D800FBB5E2 /* Trip8 Demo (2008) [Revival Studios].txt in Resources */,
				5631A742175804D800FBB5E2 /* Zero Demo [zeroZshadow, 2007].ch8 in Resources */,
				5631A743175804D800FBB5E2 /* Zero Demo [zeroZshadow, 2007].txt in Resources */,
				5631A744175804D800FBB5E2 /* 15 Puzzle [Roger Ivie] (alt).ch8 in Resources */,
				5631A745175804D800FBB5E2 /* 15 Puzzle [Roger Ivie].ch8 in Resources */,
				5631A746175804D800FBB5E2 /* 15 Puzzle [Roger Ivie].txt in Resources */,
				5631A747175804D800FBB5E2 /* Addition Problems [Paul C. Moews].ch8 in Resources */,
				5631A748175804D800FBB5E2 /* Airplane.ch8 in Resources */,
				5631A749175804D800FBB5E2 /* Animal Race [Brian Astle].ch8 in Resources */,
				5631A74A175804D800FBB5E2 /* Animal Race [Brian Astle].txt in Resources */,
				5631A74B175804D800FBB5E2 /* Astro Dodge [Revival Studios, 2008].ch8 in Resources */,
				5631A74C175804D800FBB5E2 /* Astro Dodge [Revival Studios, 2008].txt in Resources */,
				5631A74D175804D800FBB5E2 /* Biorhythm [Jef Winsor].ch8 in Resources */,
				5631A74E175804D800FBB5E2 /* Biorhythm [Jef Winsor].txt in Resources */,
				5631A74F175804D800FBB5E2 /* Blinky [Hans Christian Egeberg, 1991].ch8 in Resources */,
				5631A750175804D800FBB5E2 /* Blinky [Hans Christian Egeberg] (alt).ch8 in Resources */,
				5631A751175804D800FBB5E2 /* Blitz [David Winter].ch8 in Resources */,
				5631A752175804D800FBB5E2 /* Blitz [David Winter].txt in Resources */,
				5631A753175804D800FBB5E2 /* Bowling [Gooitzen van der Wal].ch8 in Resources */,
				5631A754175804D800FBB5E2 /* Bowling [Gooitzen van der Wal].txt in Resources */,
				5631A755175804D800FBB5E2 /* Breakout (Brix hack) [David Winter, 1997].ch8 in Resources */,
				5631A756175804D800FBB5E2 /* Breakout (Brix hack) [David Winter, 1997].txt in Resources */,
				5631A757175804D800FBB5E2 /* Breakout [Carmelo Cortez, 1979].ch8 in Resources */,
				5631A758175804D800FBB5E2 /* Breakout [Carmelo Cortez, 1979].txt in Resources */,
				5631A759175804D800FBB5E2 /* Brick (Brix hack, 1990).ch8 in Resources */,
				5631A75A175804D800FBB5E2 /* Brick (Brix hack, 1990).txt in Resources */,
				5631A75B175804D800FBB5E2 /* Brix [Andreas Gustafsson, 1990].ch8 in Resources */,
				5631A75C175804D800FBB5E2 /* Cave.ch8 in Resources */,
				5631A75D175804D800FBB5E2 /* Coin Flipping [Carmelo Cortez, 1978].ch8 in Resources */,
				5631A75E175804D800FBB5E2 /* Coin Flipping [Carmelo Cortez, 1978].txt in Resources */,
				5631A75F175804D800FBB5E2 /* Connect 4 [David Winter].ch8 in Resources */,
				5631A760175804D800FBB5E2 /* Connect 4 [David Winter].txt in Resources */,
				5631A761175804D800FBB5E2 /* Craps [Camerlo Cortez, 1978].ch8 in Resources */,
				5631A762175804D800FBB5E2 /* Craps [Camerlo Cortez, 1978].txt in Resources */,
				5631A763175804D800FBB5E2 /* Deflection [John Fort].ch8 in Resources */,
				5631A764175804D800FBB5E2 /* Deflection [John Fort].txt in Resources */,
				5631A765175804D800FBB5E2 /* Figures.ch8 in Resources */,
				5631A766175804D800FBB5E2 /* Filter.ch8 in Resources */,
				5631A767175804D800FBB5E2 /* Guess [David Winter] (alt).ch8 in Resources */,
				5631A768175804D800FBB5E2 /* Guess [David Winter] (alt).txt in Resources */,
				5631A769175804D800FBB5E2 /* Guess [David Winter].ch8 in Resources */,
				5631A76A175804D800FBB5E2 /* Guess [David Winter].txt in Resources */,
				5631A76B175804D800FBB5E2 /* Hi-Lo [Jef Winsor, 1978].ch8 in Resources */,
				5631A76C175804D800FBB5E2 /* Hi-Lo [Jef Winsor, 1978].txt in Resources */,
				5631A76D175804D800FBB5E2 /* Hidden [David Winter, 1996].ch8 in Resources */,
				5631A76E175804D800FBB5E2 /* Hidden [David Winter, 1996].txt in Resources */,
				5631A76F175804D800FBB5E2 /* Kaleidoscope [Joseph Weisbecker, 1978].ch8 in Resources */,
				5631A770175804D800FBB5E2 /* Kaleidoscope [Joseph Weisbecker, 1978].txt in Resources */,
				5631A771175804D800FBB5E2 /* Landing.ch8 in Resources */,
				5631A772175804D800FBB5E2 /* Lunar Lander (Udo Pernisz, 1979).ch8 in Resources */,
				5631A773175804D800FBB5E2 /* Lunar Lander [Udo Pernisz, 1979].txt in Resources */,
				5631A774175804D800FBB5E2 /* Mastermind FourRow (Robert Lindley, 1978).ch8 in Resources */,
				5631A775175804D800FBB5E2 /* Mastermind FourRow (Robert Lindley, 1978).txt in Resources */,
				5631A776175804D800FBB5E2 /* Merlin [David Winter].ch8 in Resources */,
				5631A777175804D800FBB5E2 /* Merlin [David Winter].txt in Resources */,
				5631A778175804D800FBB5E2 /* Missile [David Winter].ch8 in Resources */,
				5631A779175804D800FBB5E2 /* Most Dangerous Game [Peter Maruhnic].ch8 in Resources */,
				5631A77A175804D800FBB5E2 /* Most Dangerous Game [Peter Maruhnic].txt in Resources */,
				5631A77B175804D800FBB5E2 /* Nim [Carmelo Cortez, 1978].ch8 in Resources */,
				5631A77C175804D800FBB5E2 /* Nim [Carmelo Cortez, 1978].txt in Resources */,
				5631A77D175804D800FBB5E2 /* Paddles.ch8 in Resources */,
				5631A77E175804D800FBB5E2 /* Pong (1 player).ch8 in Resources */,
				5631A77F175804D800FBB5E2 /* Pong (alt).ch8 in Resources */,
				5631A780175804D800FBB5E2 /* Pong 2 (Pong hack) [David Winter, 1997].ch8 in Resources */,
				5631A781175804D800FBB5E2 /* Pong [Paul Vervalin, 1990].ch8 in Resources */,
				5631A782175804D800FBB5E2 /* Pong [Paul Vervalin, 1990].txt in Resources */,
				5631A783175804D800FBB5E2 /* Programmable Spacefighters [Jef Winsor].ch8 in Resources */,
				5631A784175804D800FBB5E2 /* Programmable Spacefighters [Jef Winsor].txt in Resources */,
				5631A785175804D800FBB5E2 /* Puzzle.ch8 in Resources */,
				5631A786175804D800FBB5E2 /* Reversi [Philip Baltzer].ch8 in Resources */,
				5631A787175804D800FBB5E2 /* Reversi [Philip Baltzer].txt in Resources */,
				5631A788175804D800FBB5E2 /* Rocket [Joseph Weisbecker, 1978].ch8 in Resources */,
				5631A789175804D800FBB5E2 /* Rocket Launch [Jonas Lindstedt].ch8 in Resources */,
				5631A78A175804D800FBB5E2 /* Rocket Launcher.ch8 in Resources */,
				5631A78B175804D800FBB5E2 /* Rush Hour [Hap, 2006] (alt).ch8 in Resources */,
				5631A78C175804D800FBB5E2 /* Rush Hour [Hap, 2006].ch8 in Resources */,
				5631A78D175804D800FBB5E2 /* Rush Hour [Hap, 2006].txt in Resources */,
				5631A78E175804D800FBB5E2 /* Russian Roulette [Carmelo Cortez, 1978].ch8 in Resources */,
				5631A78F175804D800FBB5E2 /* Russian Roulette [Carmelo Cortez, 1978].txt in Resources */,
				5631A790175804D800FBB5E2 /* Sequence Shoot [Joyce Weisbecker].ch8 in Resources */,
				5631A791175804D800FBB5E2 /* Sequence Shoot [Joyce Weisbecker].txt in Resources */,
				5631A792175804D800FBB5E2 /* Shooting Stars [Philip Baltzer, 1978].ch8 in Resources */,
				5631A793175804D800FBB5E2 /* Shooting Stars [Philip Baltzer, 1978].txt in Resources */,
				5631A794175804D800FBB5E2 /* Slide [Joyce Weisbecker].ch8 in Resources */,
				5631A795175804D800FBB5E2 /* Slide [Joyce Weisbecker].txt in Resources */,
				5631A796175804D800FBB5E2 /* Soccer.ch8 in Resources */,
				5631A797175804D800FBB5E2 /* Space Flight.ch8 in Resources */,
				5631A798175804D800FBB5E2 /* Space Intercept [Joseph Weisbecker, 1978].ch8 in Resources */,
				5631A799175804D800FBB5E2 /* Space Intercept [Joseph Weisbecker, 1978].txt in Resources */,
				5631A79A175804D800FBB5E2 /* Space Invaders [David Winter] (alt).ch8 in Resources */,
				5631A79B175804D800FBB5E2 /* Space Invaders [David Winter] (alt).txt in Resources */,
				5631A79C175804D800FBB5E2 /* Space Invaders [David Winter].ch8 in Resources */,
				5631A79D175804D800FBB5E2 /* Space Invaders [David Winter].txt in Resources */,
				5631A79E175804D800FBB5E2 /* Spooky Spot [Joseph Weisbecker, 1978].ch8 in Resources */,
				5631A79F175804D800FBB5E2 /* Spooky Spot [Joseph Weisbecker, 1978].txt in Resources */,
				5631A7A0175804D800FBB5E2 /* Squash [David Winter].ch8 in Resources */,
				5631A7A1175804D800FBB5E2 /* Submarine [Carmelo Cortez, 1978].ch8 in Resources */,
				5631A7A2175804D800FBB5E2 /* Submarine [Carmelo Cortez, 1978].txt in Resources */,
				5631A7A3175804D800FBB5E2 /* Sum Fun [Joyce Weisbecker].ch8 in Resources */,
				5631A7A4175804D800FBB5E2 /* Sum Fun [Joyce Weisbecker].txt in Resources */,
				5631A7A5175804D800FBB5E2 /* Syzygy [Roy Trevino, 1990].ch8 in Resources */,
				5631A7A6175804D800FBB5E2 /* Syzygy [Roy Trevino, 1990].txt in Resources */,
				5631A7A7175804D800FBB5E2 /* Tank.ch8 in Resources */,
				5631A7A8175804D800FBB5E2 /* Tank.txt in Resources */,
				5631A7A9175804D800FBB5E2 /* Tapeworm [JDR, 1999].ch8 in Resources */,
				5631A7AA175804D800FBB5E2 /* Tetris [Fran Dachille, 1991].ch8 in Resources */,
				5631A7AB175804D800FBB5E2 /* Tetris [Fran Dachille, 1991].txt in Resources */,
				5631A7AC175804D800FBB5E2 /* Tic-Tac-Toe [David Winter].ch8 in Resources */,
				5631A7AD175804D800FBB5E2 /* Timebomb.ch8 in Resources */,
				5631A7AE175804D800FBB5E2 /* Tron.ch8 in Resources */,
				5631A7AF175804D800FBB5E2 /* UFO [Lutz V, 1992].ch8 in Resources */,
				5631A7B0175804D800FBB5E2 /* UFO [Lutz V, 1992].txt in Resources */,
				5631A7B1175804D800FBB5E2 /* Vers [JMN, 1991].ch8 in Resources */,
				5631A7B2175804D800FBB5E2 /* Vertical Brix [Paul Robson, 1996].ch8 in Resources */,
				5631A7B3175804D800FBB5E2 /* Wall [David Winter].ch8 in Resources */,
				5631A7B4175804D800FBB5E2 /* Wipe Off [Joseph Weisbecker].ch8 in Resources */,
				5631A7B5175804D800FBB5E2 /* Worm V4 [RB-Revival Studios, 2007].ch8 in Resources */,
				5631A7B6175804D800FBB5E2 /* Worm V4 [RB-Revival Studios, 2007].txt in Resources */,
				5631A7B7175804D800FBB5E2 /* X-Mirror.ch8 in Resources */,
				5631A7B8175804D800FBB5E2 /* ZeroPong [zeroZshadow, 2007].ch8 in Resources */,
				5631A7B9175804D800FBB5E2 /* !hires_information.txt in Resources */,
				5631A7BA175804D800FBB5E2 /* Astro Dodge Hires [Revival Studios, 2008].ch8 in Resources */,
				5631A7BB175804D800FBB5E2 /* Astro Dodge Hires [Revival Studios, 2008].txt in Resources */,
				5631A7BC175804D800FBB5E2 /* Hires Maze [David Winter, 199x].ch8 in Resources */,
				5631A7BD175804D800FBB5E2 /* Hires Maze [David Winter, 199x].txt in Resources */,
				5631A7BE175804D800FBB5E2 /* Hires Particle Demo [zeroZshadow, 2008].ch8 in Resources */,
				5631A7BF175804D800FBB5E2 /* Hires Particle Demo [zeroZshadow, 2008].txt in Resources */,
				5631A7C0175804D800FBB5E2 /* Hires Sierpinski [Sergey Naydenov, 2010].ch8 in Resources */,
				5631A7C1175804D800FBB5E2 /* Hires Stars [Sergey Naydenov, 2010].ch8 in Resources */,
				5631A7C2175804D800FBB5E2 /* Hires Test [Tom Swan, 1979].ch8 in Resources */,
				5631A7C3175804D800FBB5E2 /* Hires Worm V4 [RB-Revival Studios, 2007].ch8 in Resources */,
				5631A7C4175804D800FBB5E2 /* Hires Worm V4 [RB-Revival Studios, 2007].txt in Resources */,
				5631A7C5175804D800FBB5E2 /* Trip8 Hires Demo (2008) [Revival Studios].ch8 in Resources */,
				5631A7C6175804D800FBB5E2 /* Trip8 Hires Demo (2008) [Revival Studios].txt in Resources */,
				5631A7C7175804D800FBB5E2 /* BMP Viewer - Hello (C8 example) [Hap, 2005].ch8 in Resources */,
				5631A7C8175804D800FBB5E2 /* BMP Viewer - Hello (C8 example) [Hap, 2005].txt in Resources */,
				5631A7C9175804D800FBB5E2 /* Chip8 emulator Logo [Garstyciuks].ch8 in Resources */,
				5631A7CA175804D800FBB5E2 /* Chip8 Picture.ch8 in Resources */,
				5631A7CB175804D800FBB5E2 /* Clock Program [Bill Fisher, 1981].ch8 in Resources */,
				5631A7CC175804D800FBB5E2 /* Clock Program [Bill Fisher, 1981].txt in Resources */,
				5631A7CD175804D800FBB5E2 /* Delay Timer Test [Matthew Mikolay, 2010].ch8 in Resources */,
				5631A7CE175804D800FBB5E2 /* Delay Timer Test [Matthew Mikolay, 2010].txt in Resources */,
				5631A7CF175804D800FBB5E2 /* Division Test [Sergey Naydenov, 2010].ch8 in Resources */,
				5631A7D0175804D800FBB5E2 /* Fishie [Hap, 2005].ch8 in Resources */,
				5631A7D1175804D800FBB5E2 /* Fishie [Hap, 2005].txt in Resources */,
				5631A7D2175804D800FBB5E2 /* Framed MK1 [GV Samways, 1980].ch8 in Resources */,
				5631A7D3175804D800FBB5E2 /* Framed MK1 [GV Samways, 1980].txt in Resources */,
				5631A7D4175804D800FBB5E2 /* Framed MK2 [GV Samways, 1980].ch8 in Resources */,
				5631A7D5175804D800FBB5E2 /* Framed MK2 [GV Samways, 1980].txt in Resources */,
				5631A7D6175804D800FBB5E2 /* IBM Logo.ch8 in Resources */,
				5631A7D7175804D800FBB5E2 /* Jumping X and O [Harry Kleinberg, 1977].ch8 in Resources */,
				5631A7D8175804D800FBB5E2 /* Jumping X and O [Harry Kleinberg, 1977].txt in Resources */,
				5631A7D9175804D800FBB5E2 /* Keypad Test [Hap, 2006].ch8 in Resources */,
				5631A7DA175804D800FBB5E2 /* Keypad Test [Hap, 2006].txt in Resources */,
				5631A7DB175804D800FBB5E2 /* Life [GV Samways, 1980].ch8 in Resources */,
				5631A7DC175804D800FBB5E2 /* Life [GV Samways, 1980].txt in Resources */,
				5631A7DD175804D800FBB5E2 /* Minimal game [Revival Studios, 2007].ch8 in Resources */,
				5631A7DE175804D800FBB5E2 /* Random Number Test [Matthew Mikolay, 2010].ch8 in Resources */,
				5631A7DF175804D800FBB5E2 /* Random Number Test [Matthew Mikolay, 2010].txt in Resources */,
				5631A7E0175804D800FBB5E2 /* SQRT Test [Sergey Naydenov, 2010].ch8 in Resources */,
				5631A7E1175804D800FBB5E2 /* Blockout [Steve Houk].c8x in Resources */,
				5631A7E2175804D800FBB5E2 /* Blockout [Steve Houk].txt in Resources */,
				5631A7E3175804D800FBB5E2 /* Color Kaleidoscope [Steve Houk, 1978].c8x in Resources */,
				5631A7E4175804D800FBB5E2 /* Color Kaleidoscope [Steve Houk, 1978].txt in Resources */,
				5631A7E5175804D800FBB5E2 /* ColourTest.c8x in Resources */,
				5631A7E6175804D800FBB5E2 /* Maze 2 (ETI660 Hybrid).ch8 in Resources */,
				5631A7E7175804D800FBB5E2 /* Music Maker (ETI660 Hybrid) [Peter Collins, 198x].ch8 in Resources */,
				5631A7E8175804D800FBB5E2 /* Music Maker (ETI660 Hybrid) [Peter Collins, 198x].txt in Resources */,
				5631A7E9175804D800FBB5E2 /* Pong (ETI660 Hybrid).ch8 in Resources */,
				5631A7EA175804D800FBB5E2 /* Space Invaders (ETI660 Hybrid) [P. Easdown,198x].ch8 in Resources */,
				5631A7EB175804D800FBB5E2 /* Space Invaders (ETI660 Hybrid) [P. Easdown,198x].txt in Resources */,
				5631A7EC175804D800FBB5E2 /* Wipeout (ETI660 hybrid) [W.F. Kreykes, 1982].ch8 in Resources */,
				5631A7ED175804D800FBB5E2 /* Wipeout (ETI660 hybrid) [W.F. Kreykes, 1982].txt in Resources */,
				5631A7EE175804D800FBB5E2 /* Bingo [Andrew Modla] (hybrid).ch8 in Resources */,
				5631A7EF175804D800FBB5E2 /* Bingo [Andrew Modla] (hybrid).txt in Resources */,
				5631A7F0175804D800FBB5E2 /* Blackjack [Andrew Modla] (hybrid).ch8 in Resources */,
				5631A7F1175804D800FBB5E2 /* Blackjack [Andrew Modla] (hybrid).txt in Resources */,
				5631A7F2175804D800FBB5E2 /* Boot-128 (hybrid).ch8 in Resources */,
				5631A7F3175804D800FBB5E2 /* Message Center [Andrew Modla] (hybrid).ch8 in Resources */,
				5631A7F4175804D800FBB5E2 /* Message Center [Andrew Modla] (hybrid).txt in Resources */,
				5631A7F5175804D800FBB5E2 /* Video Display Drawing Game [Joseph Weisbecker] (hybrid).ch8 in Resources */,
				5631A7F6175804D800FBB5E2 /* Video Display Drawing Game [Joseph Weisbecker] (hybrid).txt in Resources */,
				5631A7F7175804D800FBB5E2 /* Pinball [Andrew Modla].ch8 in Resources */,
				5631A7F8175804D800FBB5E2 /* Pinball [Andrew Modla].txt in Resources */,
				5631A7F9175804D800FBB5E2 /* SoundTest.c8x in Resources */,
				5631A7FA175804D800FBB5E2 /* Chip8 Pack - Readme.txt in Resources */,
				5631A7FB175804D800FBB5E2 /* Latest Updates.txt in Resources */,
				5631A7FC175804D800FBB5E2 /* Mega Minimal [Revival Studios, 2007].ch8 in Resources */,
				5631A7FD175804D800FBB5E2 /* Mega Particle Demo [zeroZshadow, 2008].ch8 in Resources */,
				5631A7FE175804D800FBB5E2 /* Mega Particle Demo [zeroZshadow, 2008].txt in Resources */,
				5631A7FF175804D800FBB5E2 /* MegaMaze [David Winter, 2007].ch8 in Resources */,
				5631A800175804D800FBB5E2 /* MegaMaze [David Winter, 2007].txt in Resources */,
				5631A801175804D800FBB5E2 /* MegaSirpinski [Sergey Naydenov, 2010].ch8 in Resources */,
				5631A802175804D800FBB5E2 /* Twister Demo [Revival Studios, 2007].ch8 in Resources */,
				5631A803175804D800FBB5E2 /* Twister Demo [Revival Studios, 2007].txt in Resources */,
				5631A804175804D800FBB5E2 /* Bounce [Les Harris].ch8 in Resources */,
				5631A805175804D800FBB5E2 /* Car Race Demo [Erik Bryntse, 1991].ch8 in Resources */,
				5631A806175804D800FBB5E2 /* Car Race Demo [Erik Bryntse, 1991].txt in Resources */,
				5631A807175804D800FBB5E2 /* Climax Slideshow - Part 1 [Revival Studios, 2008].ch8 in Resources */,
				5631A808175804D800FBB5E2 /* Climax Slideshow - Part 1 [Revival Studios, 2008].txt in Resources */,
				5631A809175804D800FBB5E2 /* Climax Slideshow - Part 2 [Revival Studios, 2008].ch8 in Resources */,
				5631A80A175804D800FBB5E2 /* Climax Slideshow - Part 2 [Revival Studios, 2008].txt in Resources */,
				5631A80B175804D800FBB5E2 /* Robot.ch8 in Resources */,
				5631A80C175804D800FBB5E2 /* SCSerpinski [Sergey Naydenov, 2010].ch8 in Resources */,
				5631A80D175804D800FBB5E2 /* SCStars  [Sergey Naydenov, 2010].ch8 in Resources */,
				5631A80E175804D800FBB5E2 /* Super Particle Demo [zeroZshadow, 2008].ch8 in Resources */,
				5631A80F175804D800FBB5E2 /* Super Particle Demo [zeroZshadow, 2008].txt in Resources */,
				5631A810175804D800FBB5E2 /* SuperMaze [David Winter, 199x].ch8 in Resources */,
				5631A811175804D800FBB5E2 /* SuperMaze [David Winter, 199x].txt in Resources */,
				5631A812175804D800FBB5E2 /* SuperTrip8 Demo (2008) [Revival Studios].ch8 in Resources */,
				5631A813175804D800FBB5E2 /* SuperTrip8 Demo (2008) [Revival Studios].txt in Resources */,
				5631A814175804D800FBB5E2 /* Worms demo.ch8 in Resources */,
				5631A815175804D800FBB5E2 /* Alien [Jonas Lindstedt, 1993].ch8 in Resources */,
				5631A816175804D800FBB5E2 /* Alien [Jonas Lindstedt, 1993].txt in Resources */,
				5631A817175804D800FBB5E2 /* Ant - In Search of Coke [Erin S. Catto].ch8 in Resources */,
				5631A818175804D800FBB5E2 /* Blinky [Hans Christian Egeberg, 1991].ch8 in Resources */,
				5631A819175804D800FBB5E2 /* Blinky [Hans Christian Egeberg, 1991].txt in Resources */,
				5631A81A175804D800FBB5E2 /* Car [Klaus von Sengbusch, 1994].ch8 in Resources */,
				5631A81B175804D800FBB5E2 /* Car [Klaus von Sengbusch, 1994].txt in Resources */,
				5631A81C175804D800FBB5E2 /* Field! [Al Roland, 1993] (alt).ch8 in Resources */,
				5631A81D175804D800FBB5E2 /* Field! [Al Roland, 1993].ch8 in Resources */,
				5631A81E175804D800FBB5E2 /* Field! [Al Roland, 1993].txt in Resources */,
				5631A81F175804D800FBB5E2 /* H. Piper [Paul Raines, 1991].ch8 in Resources */,
				5631A820175804D800FBB5E2 /* H. Piper [Paul Raines, 1991].txt in Resources */,
				5631A821175804D800FBB5E2 /* Joust [Erin S. Catto, 1993].ch8 in Resources */,
				5631A822175804D800FBB5E2 /* Joust [Erin S. Catto, 1993].txt in Resources */,
				5631A823175804D800FBB5E2 /* Laser.ch8 in Resources */,
				5631A824175804D800FBB5E2 /* Loopz (with difficulty select) [Hap, 2006].ch8 in Resources */,
				5631A825175804D800FBB5E2 /* Loopz (with difficulty select) [Hap, 2006].txt in Resources */,
				5631A826175804D800FBB5E2 /* Loopz [Andreas Daumann].ch8 in Resources */,
				5631A827175804D800FBB5E2 /* Magic Square [David Winter, 1997].ch8 in Resources */,
				5631A828175804D800FBB5E2 /* Magic Square [David Winter, 1997].txt in Resources */,
				5631A829175804D800FBB5E2 /* Matches.ch8 in Resources */,
				5631A82A175804D800FBB5E2 /* Mines! - The minehunter [David Winter, 1997].ch8 in Resources */,
				5631A82B175804D800FBB5E2 /* Single Dragon (Bomber Section) [David Nurser, 1993].ch8 in Resources */,
				5631A82C175804D800FBB5E2 /* Single Dragon (Bomber Section) [David Nurser, 1993].txt in Resources */,
				5631A82D175804D800FBB5E2 /* Single Dragon (Stages 1-2) [David Nurser, 1993].ch8 in Resources */,
				5631A82E175804D800FBB5E2 /* Single Dragon (Stages 1-2) [David Nurser, 1993].txt in Resources */,
				5631A82F175804D800FBB5E2 /* Sokoban [Hap, 2006] (alt).ch8 in Resources */,
				5631A830175804D800FBB5E2 /* Sokoban [Hap, 2006].ch8 in Resources */,
				5631A831175804D800FBB5E2 /* Sokoban [Hap, 2006].txt in Resources */,
				5631A832175804D800FBB5E2 /* Spacefight 2091 [Carsten Soerensen, 1992].ch8 in Resources */,
				5631A833175804D800FBB5E2 /* Spacefight 2091 [Carsten Soerensen, 1992].txt in Resources */,
				5631A834175804D800FBB5E2 /* Super Astro Dodge [Revival Studios, 2008].ch8 in Resources */,
				5631A835175804D800FBB5E2 /* Super Astro Dodge [Revival Studios, 2008].txt in Resources */,
				5631A836175804D800FBB5E2 /* SuperWorm V3 [RB, 1992].ch8 in Resources */,
				5631A837175804D800FBB5E2 /* SuperWorm V4 [RB-Revival Studios, 2007].ch8 in Resources */,
				5631A838175804D800FBB5E2 /* SuperWorm V4 [RB-Revival Studios, 2007].txt in Resources */,
				5631A839175804D800FBB5E2 /* U-Boat [Michael Kemper, 1994].ch8 in Resources */,
				5631A83A175804D800FBB5E2 /* U-Boat [Michael Kemper, 1994].txt in Resources */,
				5631A83B175804D800FBB5E2 /* BMP Viewer (16x16 tiles) (MAME) [IQ_132].ch8 in Resources */,
				5631A83C175804D800FBB5E2 /* BMP Viewer (Google) [IQ_132].ch8 in Resources */,
				5631A83D175804D800FBB5E2 /* BMP Viewer - Flip-8 logo [Newsdee, 2006].ch8 in Resources */,
				5631A83E175804D800FBB5E2 /* BMP Viewer - Flip-8 logo [Newsdee, 2006].txt in Resources */,
				5631A83F175804D800FBB5E2 /* BMP Viewer - Kyori (SC example) [Hap, 2005].ch8 in Resources */,
				5631A840175804D800FBB5E2 /* BMP Viewer - Kyori (SC example) [Hap, 2005].txt in Resources */,
				5631A841175804D800FBB5E2 /* BMP Viewer - Let's Chip-8! [Koppepan, 2005].ch8 in Resources */,
				5631A842175804D800FBB5E2 /* BMP Viewer - Let's Chip-8! [Koppepan, 2005].txt in Resources */,
				5631A843175804D800FBB5E2 /* Emutest [Hap, 2006].ch8 in Resources */,
				5631A844175804D800FBB5E2 /* Emutest [Hap, 2006].txt in Resources */,
				5631A845175804D800FBB5E2 /* Font Test [Newsdee, 2006].ch8 in Resources */,
				5631A846175804D800FBB5E2 /* Hex Mixt.ch8 in Resources */,
				5631A847175804D800FBB5E2 /* Line Demo.ch8 in Resources */,
				5631A848175804D800FBB5E2 /* SC Test.ch8 in Resources */,
				5631A849175804D800FBB5E2 /* SC Test.txt in Resources */,
				5631A84A175804D800FBB5E2 /* SCHIP Test [iq_132].ch8 in Resources */,
				5631A84B175804D800FBB5E2 /* Scroll Test (modified) [Garstyciuks].ch8 in Resources */,
				5631A84C175804D800FBB5E2 /* Scroll Test.ch8 in Resources */,
				5631A84D175804D800FBB5E2 /* SuperChip Test.ch8 in Resources */,
				5631A84E175804D800FBB5E2 /* SuperChip Test.txt in Resources */,
				5631A84F175804D800FBB5E2 /* Test128.ch8 in Resources */,
				56A900DE17593BB6002EB134 /* DebugCell.xib in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXResourcesBuildPhase section */

/* Begin PBXSourcesBuildPhase section */
		566A4FFE1752866A00A90940 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				566A50121752866A00A90940 /* main.m in Sources */,
				566A50161752866B00A90940 /* AppDelegate.m in Sources */,
				566A501F1752866B00A90940 /* ViewController.m in Sources */,
				566A502B17529F1000A90940 /* Chip8.m in Sources */,
				566A50341752BA2700A90940 /* Chip8jntUtils.m in Sources */,
				569351E41754072E00911B2A /* Chip8Canvas.m in Sources */,
				56542F0A17552FB300BFA0CB /* Opcode.m in Sources */,
				56A900DA17593AD3002EB134 /* DebugCell.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXVariantGroup section */
		566A500E1752866A00A90940 /* InfoPlist.strings */ = {
			isa = PBXVariantGroup;
			children = (
				566A500F1752866A00A90940 /* en */,
			);
			name = InfoPlist.strings;
			sourceTree = "<group>";
		};
		566A50201752866B00A90940 /* ViewController.xib */ = {
			isa = PBXVariantGroup;
			children = (
				566A50211752866B00A90940 /* en */,
			);
			name = ViewController.xib;
			sourceTree = "<group>";
		};
/* End PBXVariantGroup section */

/* Begin XCBuildConfiguration section */
		566A50231752866B00A90940 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "iPhone Developer";
				COPY_PHASE_STRIP = NO;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				GCC_WARN_ABOUT_RETURN_TYPE = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				IPHONEOS_DEPLOYMENT_TARGET = 6.1;
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = iphoneos;
			};
			name = Debug;
		};
		566A50241752866B00A90940 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "iPhone Developer";
				COPY_PHASE_STRIP = YES;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_WARN_ABOUT_RETURN_TYPE = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				IPHONEOS_DEPLOYMENT_TARGET = 6.1;
				OTHER_CFLAGS = "-DNS_BLOCK_ASSERTIONS=1";
				SDKROOT = iphoneos;
				VALIDATE_PRODUCT = YES;
			};
			name = Release;
		};
		566A50261752866B00A90940 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = "Chip8jnt/Chip8jnt-Prefix.pch";
				INFOPLIST_FILE = "Chip8jnt/Chip8jnt-Info.plist";
				PRODUCT_NAME = "$(TARGET_NAME)";
				WRAPPER_EXTENSION = app;
			};
			name = Debug;
		};
		566A50271752866B00A90940 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = "Chip8jnt/Chip8jnt-Prefix.pch";
				INFOPLIST_FILE = "Chip8jnt/Chip8jnt-Info.plist";
				PRODUCT_NAME = "$(TARGET_NAME)";
				WRAPPER_EXTENSION = app;
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		566A4FFD1752866A00A90940 /* Build configuration list for PBXProject "Chip8jnt" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				566A50231752866B00A90940 /* Debug */,
				566A50241752866B00A90940 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		566A50251752866B00A90940 /* Build configuration list for PBXNativeTarget "Chip8jnt" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				566A50261752866B00A90940 /* Debug */,
				566A50271752866B00A90940 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = 566A4FFA1752866A00A90940 /* Project object */;
}
